syntax = "proto3";

package gtproto;

import "users.proto";

message ChatMember {
  User user = 1;
  bool can_i_remove_this_member = 5; // computed property

  bool is_admin = 2; // admin can change this flag and settings below
  bool can_add_new_members = 6;
  bool can_manage_admins = 7;
  bool can_change_settings = 8;
}

message ChatMembersListRequest {
  string chat_id = 1;
  uint32 limit = 2; // default: StateResponse.max_results_on_page
  uint32 offset = 3;
}

message ChatMembersListResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_LIMIT_ERROR = 2;
  }
  repeated Error errors = 1;
  repeated ChatMember members = 2;
}

message ChatMemberDetailsRequest {
  string chat_id = 1;
  string user_id = 2; // uuid or "me"
}

message ChatMemberDetailsResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_USER_ERROR = 2;
  }
  repeated Error errors = 1;
  ChatMember member = 2;
}

message DeleteChatMemberRequest {
  string chat_id = 1;
  string user_id = 2; // uuid or "me"
}

message DeleteChatMemberResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_USER_ERROR = 2;
    NOT_ALLOWED_ERROR = 3;
  }
  repeated Error errors = 1;
}

message CreateChatMembersRequest {
  string chat_id = 1;
  repeated string user_ids = 2;
}

message CreateChatMembersResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    NOT_ALLOWED_ERROR = 2;
  }
  repeated Error errors = 1;
  repeated ChatMember members = 2;
}
