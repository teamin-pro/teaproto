syntax = "proto3";

package gtproto;

import "messages.proto";
import "users.proto";

message GroupMember {
  User user = 1;
  uint32 role_id = 6;
  bool can_i_remove_this_member = 5;
}

message CreateGroupRequest {
  string title = 1;
  repeated string user_ids = 2;
}

message CreateGroupResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    EMPTY_TITLE_ERROR = 1;
    TITLE_TOO_LONG_ERROR = 2;
    CREATION_NOT_ALLOWED = 3;
  }
  repeated Error errors = 1;
  Chat chat = 3;
}

message UpdateGroupSettingsRequest {
  string chat_id = 1;
  string title = 2;
}

message UpdateGroupSettingsResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    NOT_ALLOWED_ERROR = 2;
    EMPTY_TITLE_ERROR = 3;
    TITLE_TOO_LONG_ERROR = 4;
  }
  repeated Error errors = 1;
  Chat chat = 3;
}

message GroupMembersListRequest {
  string chat_id = 1;
  uint32 limit = 2; // default: StateResponse.max_results_on_page
  uint32 offset = 3;

  // filters
  string user_id = 4; // uuid or "me"
}

message GroupMembersListResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_LIMIT_ERROR = 2;
    INVALID_USER_ERROR = 3;
  }
  repeated Error errors = 1;
  repeated GroupMember members = 2;
  repeated GroupRole roles = 3;
}

message DeleteGroupMemberRequest {
  string chat_id = 1;
  string user_id = 2; // uuid or "me"
}

message DeleteGroupMemberResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_USER_ERROR = 2;
    NOT_ALLOWED_ERROR = 3;
  }
  repeated Error errors = 1;
}

message CreateGroupMembersRequest {
  string chat_id = 1;
  repeated string user_ids = 2;
}

message CreateGroupMembersResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    NOT_ALLOWED_ERROR = 2;
  }
  repeated Error errors = 1;
  repeated GroupMember members = 2;
}

message UpdateGroupMemberRequest {
  string chat_id = 1;
  string user_id = 2; // uuid or "me"
  uint32 role_id = 3;
}

message UpdateGroupMemberResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    NOT_ALLOWED_ERROR = 2;
  }
  repeated Error errors = 1;
  GroupMember member = 2;
}
