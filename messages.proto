syntax = "proto3";

package gtproto;

import "uploads.proto";
import "users.proto";

message ChatBadge {
  string chat_id = 1;
  uint32 badge = 2;
}

enum ChatType {
  UNKNOWN_CHAT_TYPE = 0;
  DIRECT = 1;
  GROUP = 2;
  TASK = 3;
}

message ChatPreview {
  string id = 1;
  ChatType chatType = 2;
  //  Icon icon = 3;
  //  string displayName = 4;
}

enum MessageRight {
  UNKNOWN_MESSAGE_RIGHT = 0;
  CAN_EDIT_MESSAGE = 1;
  CAN_DELETE_MESSAGE = 2;
}

message Message {
  ChatPreview chat = 8;
  string id = 1;
  uint64 created_at = 3;
  uint64 updated_at = 9;
  string text = 4;
  User sender = 5;
  string prev_message_id = 6;
  uint32 viewed_counter = 7; // how many recipients viewed this message
  repeated MessageRight rights = 10;
  repeated Upload uploads = 11;
}

message ViewedMessage {
  string message_id = 1;
  string chat_id = 2;
  uint32 viewed_counter = 3; // how many recipients viewed this message
}

message SendMessageRequest {
  string id = 4; // optional
  oneof recipient {
    string chat_id = 2;
    string user_id = 1;
  }
  string text = 3;
  repeated string upload_ids = 5;
}

message SendMessageResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_MESSAGE_ID_ERROR = 1;
    INVALID_RECIPIENT_ERROR = 2;
    MESSAGE_TEXT_TOO_LONG_ERROR = 3;
    MESSAGE_IS_EMPTY_ERROR = 4;
    TOO_MANY_UPLOADS_ERROR = 5; // see StateResponse.max_uploads_for_message
  }
  repeated Error errors = 1;

  Message message = 2;
}

message MessagesListRequest {
  message LatestFilter {
    oneof recipient {
      string chat_id = 1;
      string user_id = 2;
    }
    uint32 limit = 3; // default: StateResponse.max_results_on_page
  }

  message ScrollFilter {
    oneof recipient {
      string chat_id = 1;
      string user_id = 2;
    }
    string message_id = 6;
    uint32 new_messages_limit = 4;
    uint32 old_messages_limit = 5;
  }

  oneof filter {
    LatestFilter latest = 3;
    ScrollFilter scroll = 4;
  }

  // filters
  bool only_with_uploads = 6;
}

message MessagesListResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_RECIPIENT_ERROR = 1;
    INVALID_MESSAGE_ID_ERROR = 2;
    INVALID_LIMIT_ERROR = 3;
  }
  repeated Error errors = 1;

  repeated Message messages = 2;
}

message MessageDetailsRequest {
  string id = 1;
}

message MessageDetailsResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_MESSAGE_ID_ERROR = 1;
  }
  repeated Error errors = 1;
  Message message = 2;
}

message ViewMessageRequest {
  string id = 1;
}

message ViewMessageResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_MESSAGE_ID_ERROR = 1;
  }
  repeated Error errors = 1;
  uint32 badge = 2;  // number of unseen messages
  repeated ViewedMessage viewed_messages = 3; // viewed messages list
}

message MessageViewersRequest {
  string id = 1;
}

message MessageViewersResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_MESSAGE_ID_ERROR = 1;
  }
  repeated Error errors = 1;
  repeated User users = 3;
}
