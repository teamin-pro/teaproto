syntax = "proto3";

package teaproto;

import "teatypes/tgroups.proto";

message GroupMembersListRequest {
  string chat_id = 1;
  uint32 limit = 2; // default: StateResponse.max_results_on_page
  uint32 offset = 3;

  // filters
  string user_id = 4; // uuid or "me"
}

message GroupMembersListResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_LIMIT_ERROR = 2;
    INVALID_USER_ERROR = 3;
    ACCESS_DENIED_ERROR = 4;
  }
  repeated Error errors = 1;
  repeated teatypes.GroupMember members = 2;
}

message CreateGroupMembersRequest {
  string chat_id = 1;
  repeated string user_ids = 2;
}

message CreateGroupMembersResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    ACCESS_DENIED_ERROR = 2;
  }
  repeated Error errors = 1;
  repeated teatypes.GroupMember members = 2;
}

message UpdateGroupMemberRequest {
  string chat_id = 1;
  string user_id = 2; // uuid or "me"
  uint32 group_role_id = 3;
}

message UpdateGroupMemberResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_USER_ERROR = 2;
    ACCESS_DENIED_ERROR = 3;
  }
  repeated Error errors = 1;
  teatypes.GroupMember member = 2;
}

message RemoveGroupMemberRequest {
  string chat_id = 1;
  string user_id = 2; // uuid or "me"
}

message RemoveGroupMemberResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_USER_ERROR = 2;
    ACCESS_DENIED_ERROR = 3;
  }
  repeated Error errors = 1;
}
