syntax = "proto3";

package gtproto;

import "core.proto";
import "core_boards.proto";
import "core_tasks.proto";

message BoardDetailsRequest {
  string chat_id = 1;
}

message BoardDetailsResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    ACCESS_TO_CHAT_DENIED_ERROR = 2;
  }
  repeated Error errors = 1;
  Chat chat = 4;
  repeated BoardRole board_roles = 2;
  repeated TaskRole task_roles = 5;
  repeated TaskStatus task_statuses = 3;
}

message CreateBoardRequest {
  string title = 1;
  repeated string user_ids = 2;
}

message CreateBoardResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    EMPTY_TITLE_ERROR = 1;
    TITLE_TOO_LONG_ERROR = 2; // see StateResponse.max_board_title_length
  }
  repeated Error errors = 1;
  Chat chat = 2;
}

message UpdateBoardRequest {
  string chat_id = 1;
  string title = 2;
}

message UpdateBoardResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    EMPTY_TITLE_ERROR = 2;
    TITLE_TOO_LONG_ERROR = 3; // see StateResponse.max_board_title_length
    UPDATE_BOARD_NOT_ALLOWED_ERROR = 4;
  }
  repeated Error errors = 1;
  Chat chat = 2;
}

message BoardMembersListRequest {
  string chat_id = 1;
  uint32 limit = 2; // default: StateResponse.max_results_on_page
  uint32 offset = 3;

  // filters
  string user_id = 4; // uuid or "me"
}

message BoardMembersListResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_LIMIT_ERROR = 2;
    INVALID_USER_ERROR = 3;
  }
  repeated Error errors = 1;
  repeated BoardMember members = 2;
  repeated BoardRole board_roles = 3;
}

message CreateBoardMembersRequest {
  string chat_id = 1;
  repeated string user_ids = 2;
}

message CreateBoardMembersResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    NOT_ALLOWED_TO_ADD_MEMBERS_ERROR = 2;
  }
  repeated Error errors = 1;
  repeated BoardMember members = 2;
}

message UpdateBoardMemberRequest {
  string chat_id = 1;
  string user_id = 2; // uuid or "me"
  uint32 board_role_id = 3;
}

message UpdateBoardMemberResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_USER_ERROR = 2;
    UPDATE_BOARD_MEMBER_NOT_ALLOWED_ERROR = 3;
  }
  repeated Error errors = 1;
  BoardMember member = 2;
}

message RemoveBoardMemberRequest {
  string chat_id = 1;
  string user_id = 2; // uuid or "me"
}

message RemoveBoardMemberResponse {
  enum Error {
    UNKNOWN_ERROR = 0;
    INVALID_CHAT_ERROR = 1;
    INVALID_USER_ERROR = 2;
    REMOVE_BOARD_MEMBER_NOT_ALLOWED_ERROR = 3;
  }
  repeated Error errors = 1;
}
