// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.25.2
// source: actions.proto

package teaproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerResponse_Error int32

const (
	ServerResponse_UNKNOWN_ERROR                ServerResponse_Error = 0
	ServerResponse_INVALID_TOKEN_ERROR          ServerResponse_Error = 1
	ServerResponse_NO_ACTIONS_IN_REQUEST_ERROR  ServerResponse_Error = 2
	ServerResponse_MAX_ACTIONS_IN_REQUEST_ERROR ServerResponse_Error = 3 // see: StateResponse.max_actions_in_one_request
	ServerResponse_INTERNAL_SERVER_ERROR        ServerResponse_Error = 4
)

// Enum value maps for ServerResponse_Error.
var (
	ServerResponse_Error_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "INVALID_TOKEN_ERROR",
		2: "NO_ACTIONS_IN_REQUEST_ERROR",
		3: "MAX_ACTIONS_IN_REQUEST_ERROR",
		4: "INTERNAL_SERVER_ERROR",
	}
	ServerResponse_Error_value = map[string]int32{
		"UNKNOWN_ERROR":                0,
		"INVALID_TOKEN_ERROR":          1,
		"NO_ACTIONS_IN_REQUEST_ERROR":  2,
		"MAX_ACTIONS_IN_REQUEST_ERROR": 3,
		"INTERNAL_SERVER_ERROR":        4,
	}
)

func (x ServerResponse_Error) Enum() *ServerResponse_Error {
	p := new(ServerResponse_Error)
	*p = x
	return p
}

func (x ServerResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_actions_proto_enumTypes[0].Descriptor()
}

func (ServerResponse_Error) Type() protoreflect.EnumType {
	return &file_actions_proto_enumTypes[0]
}

func (x ServerResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerResponse_Error.Descriptor instead.
func (ServerResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{1, 0}
}

type WebsocketEvent_Error int32

const (
	// Reserved
	WebsocketEvent_UNKNOWN_ERROR WebsocketEvent_Error = 0
	// Token is invalid
	WebsocketEvent_INVALID_TOKEN_ERROR WebsocketEvent_Error = 1
)

// Enum value maps for WebsocketEvent_Error.
var (
	WebsocketEvent_Error_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "INVALID_TOKEN_ERROR",
	}
	WebsocketEvent_Error_value = map[string]int32{
		"UNKNOWN_ERROR":       0,
		"INVALID_TOKEN_ERROR": 1,
	}
)

func (x WebsocketEvent_Error) Enum() *WebsocketEvent_Error {
	p := new(WebsocketEvent_Error)
	*p = x
	return p
}

func (x WebsocketEvent_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebsocketEvent_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_actions_proto_enumTypes[1].Descriptor()
}

func (WebsocketEvent_Error) Type() protoreflect.EnumType {
	return &file_actions_proto_enumTypes[1]
}

func (x WebsocketEvent_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebsocketEvent_Error.Descriptor instead.
func (WebsocketEvent_Error) EnumDescriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{6, 0}
}

type ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string    `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Actions []*Action `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *ClientRequest) Reset() {
	*x = ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRequest) ProtoMessage() {}

func (x *ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRequest.ProtoReflect.Descriptor instead.
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{0}
}

func (x *ClientRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ClientRequest) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type ServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors  []ServerResponse_Error `protobuf:"varint,1,rep,packed,name=errors,proto3,enum=teaproto.ServerResponse_Error" json:"errors,omitempty"`
	Results []*Result              `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ServerResponse) Reset() {
	*x = ServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerResponse) ProtoMessage() {}

func (x *ServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerResponse.ProtoReflect.Descriptor instead.
func (*ServerResponse) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{1}
}

func (x *ServerResponse) GetErrors() []ServerResponse_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ServerResponse) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*Action_EmailCodeAuthConfirmRequest
	//	*Action_EmailCodeAuthRequest
	//	*Action_EmailPasswordAuthRequest
	//	*Action_LogoutRequest
	//	*Action_SetEmailConfirmRequest
	//	*Action_SetEmailRequest
	//	*Action_SetPasswordRequest
	//	*Action_ChatDetailsRequest
	//	*Action_ChatEventRequest
	//	*Action_ChatListRequest
	//	*Action_PinChatRequest
	//	*Action_CreateGroupRequest
	//	*Action_GroupDetailsRequest
	//	*Action_UpdateGroupRequest
	//	*Action_DeleteGroupRequest
	//	*Action_CreateGroupMembersRequest
	//	*Action_GroupMembersListRequest
	//	*Action_RemoveGroupMemberRequest
	//	*Action_UpdateGroupMemberRequest
	//	*Action_BoardDetailsRequest
	//	*Action_CreateBoardRequest
	//	*Action_UpdateBoardRequest
	//	*Action_BoardMembersListRequest
	//	*Action_CreateOrUpdateBoardMembersRequest
	//	*Action_RemoveBoardMembersRequest
	//	*Action_CreateTaskRequest
	//	*Action_DeleteTaskRequest
	//	*Action_UpdateTaskRequest
	//	*Action_CreateOrUpdateTaskMembersRequest
	//	*Action_RemoveTaskMembersRequest
	//	*Action_TaskMembersListRequest
	//	*Action_CreateOrUpdateDeviceRequest
	//	*Action_DeleteDeviceRequest
	//	*Action_DevicesListRequest
	//	*Action_DeleteMessageRequest
	//	*Action_MessageDetailsRequest
	//	*Action_MessagesListRequest
	//	*Action_SendMessageRequest
	//	*Action_MessageViewersRequest
	//	*Action_ViewMessageRequest
	//	*Action_ReactionsRequest
	//	*Action_SetMessageReactionRequest
	//	*Action_BadgeRequest
	//	*Action_StateRequest
	//	*Action_FakeErrorRequest
	//	*Action_DeleteTokenRequest
	//	*Action_TokensListRequest
	//	*Action_ChatUploadsRequest
	//	*Action_UploadIconRequest
	//	*Action_UploadRequest
	//	*Action_ProfileRequest
	//	*Action_UpdateProfileRequest
	//	*Action_UsersListRequest
	Request isAction_Request `protobuf_oneof:"request"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{2}
}

func (m *Action) GetRequest() isAction_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *Action) GetEmailCodeAuthConfirmRequest() *EmailCodeAuthConfirmRequest {
	if x, ok := x.GetRequest().(*Action_EmailCodeAuthConfirmRequest); ok {
		return x.EmailCodeAuthConfirmRequest
	}
	return nil
}

func (x *Action) GetEmailCodeAuthRequest() *EmailCodeAuthRequest {
	if x, ok := x.GetRequest().(*Action_EmailCodeAuthRequest); ok {
		return x.EmailCodeAuthRequest
	}
	return nil
}

func (x *Action) GetEmailPasswordAuthRequest() *EmailPasswordAuthRequest {
	if x, ok := x.GetRequest().(*Action_EmailPasswordAuthRequest); ok {
		return x.EmailPasswordAuthRequest
	}
	return nil
}

func (x *Action) GetLogoutRequest() *LogoutRequest {
	if x, ok := x.GetRequest().(*Action_LogoutRequest); ok {
		return x.LogoutRequest
	}
	return nil
}

func (x *Action) GetSetEmailConfirmRequest() *SetEmailConfirmRequest {
	if x, ok := x.GetRequest().(*Action_SetEmailConfirmRequest); ok {
		return x.SetEmailConfirmRequest
	}
	return nil
}

func (x *Action) GetSetEmailRequest() *SetEmailRequest {
	if x, ok := x.GetRequest().(*Action_SetEmailRequest); ok {
		return x.SetEmailRequest
	}
	return nil
}

func (x *Action) GetSetPasswordRequest() *SetPasswordRequest {
	if x, ok := x.GetRequest().(*Action_SetPasswordRequest); ok {
		return x.SetPasswordRequest
	}
	return nil
}

func (x *Action) GetChatDetailsRequest() *ChatDetailsRequest {
	if x, ok := x.GetRequest().(*Action_ChatDetailsRequest); ok {
		return x.ChatDetailsRequest
	}
	return nil
}

func (x *Action) GetChatEventRequest() *ChatEventRequest {
	if x, ok := x.GetRequest().(*Action_ChatEventRequest); ok {
		return x.ChatEventRequest
	}
	return nil
}

func (x *Action) GetChatListRequest() *ChatListRequest {
	if x, ok := x.GetRequest().(*Action_ChatListRequest); ok {
		return x.ChatListRequest
	}
	return nil
}

func (x *Action) GetPinChatRequest() *PinChatRequest {
	if x, ok := x.GetRequest().(*Action_PinChatRequest); ok {
		return x.PinChatRequest
	}
	return nil
}

func (x *Action) GetCreateGroupRequest() *CreateGroupRequest {
	if x, ok := x.GetRequest().(*Action_CreateGroupRequest); ok {
		return x.CreateGroupRequest
	}
	return nil
}

func (x *Action) GetGroupDetailsRequest() *GroupDetailsRequest {
	if x, ok := x.GetRequest().(*Action_GroupDetailsRequest); ok {
		return x.GroupDetailsRequest
	}
	return nil
}

func (x *Action) GetUpdateGroupRequest() *UpdateGroupRequest {
	if x, ok := x.GetRequest().(*Action_UpdateGroupRequest); ok {
		return x.UpdateGroupRequest
	}
	return nil
}

func (x *Action) GetDeleteGroupRequest() *DeleteGroupRequest {
	if x, ok := x.GetRequest().(*Action_DeleteGroupRequest); ok {
		return x.DeleteGroupRequest
	}
	return nil
}

func (x *Action) GetCreateGroupMembersRequest() *CreateGroupMembersRequest {
	if x, ok := x.GetRequest().(*Action_CreateGroupMembersRequest); ok {
		return x.CreateGroupMembersRequest
	}
	return nil
}

func (x *Action) GetGroupMembersListRequest() *GroupMembersListRequest {
	if x, ok := x.GetRequest().(*Action_GroupMembersListRequest); ok {
		return x.GroupMembersListRequest
	}
	return nil
}

func (x *Action) GetRemoveGroupMemberRequest() *RemoveGroupMemberRequest {
	if x, ok := x.GetRequest().(*Action_RemoveGroupMemberRequest); ok {
		return x.RemoveGroupMemberRequest
	}
	return nil
}

func (x *Action) GetUpdateGroupMemberRequest() *UpdateGroupMemberRequest {
	if x, ok := x.GetRequest().(*Action_UpdateGroupMemberRequest); ok {
		return x.UpdateGroupMemberRequest
	}
	return nil
}

func (x *Action) GetBoardDetailsRequest() *BoardDetailsRequest {
	if x, ok := x.GetRequest().(*Action_BoardDetailsRequest); ok {
		return x.BoardDetailsRequest
	}
	return nil
}

func (x *Action) GetCreateBoardRequest() *CreateBoardRequest {
	if x, ok := x.GetRequest().(*Action_CreateBoardRequest); ok {
		return x.CreateBoardRequest
	}
	return nil
}

func (x *Action) GetUpdateBoardRequest() *UpdateBoardRequest {
	if x, ok := x.GetRequest().(*Action_UpdateBoardRequest); ok {
		return x.UpdateBoardRequest
	}
	return nil
}

func (x *Action) GetBoardMembersListRequest() *BoardMembersListRequest {
	if x, ok := x.GetRequest().(*Action_BoardMembersListRequest); ok {
		return x.BoardMembersListRequest
	}
	return nil
}

func (x *Action) GetCreateOrUpdateBoardMembersRequest() *CreateOrUpdateBoardMembersRequest {
	if x, ok := x.GetRequest().(*Action_CreateOrUpdateBoardMembersRequest); ok {
		return x.CreateOrUpdateBoardMembersRequest
	}
	return nil
}

func (x *Action) GetRemoveBoardMembersRequest() *RemoveBoardMembersRequest {
	if x, ok := x.GetRequest().(*Action_RemoveBoardMembersRequest); ok {
		return x.RemoveBoardMembersRequest
	}
	return nil
}

func (x *Action) GetCreateTaskRequest() *CreateTaskRequest {
	if x, ok := x.GetRequest().(*Action_CreateTaskRequest); ok {
		return x.CreateTaskRequest
	}
	return nil
}

func (x *Action) GetDeleteTaskRequest() *DeleteTaskRequest {
	if x, ok := x.GetRequest().(*Action_DeleteTaskRequest); ok {
		return x.DeleteTaskRequest
	}
	return nil
}

func (x *Action) GetUpdateTaskRequest() *UpdateTaskRequest {
	if x, ok := x.GetRequest().(*Action_UpdateTaskRequest); ok {
		return x.UpdateTaskRequest
	}
	return nil
}

func (x *Action) GetCreateOrUpdateTaskMembersRequest() *CreateOrUpdateTaskMembersRequest {
	if x, ok := x.GetRequest().(*Action_CreateOrUpdateTaskMembersRequest); ok {
		return x.CreateOrUpdateTaskMembersRequest
	}
	return nil
}

func (x *Action) GetRemoveTaskMembersRequest() *RemoveTaskMembersRequest {
	if x, ok := x.GetRequest().(*Action_RemoveTaskMembersRequest); ok {
		return x.RemoveTaskMembersRequest
	}
	return nil
}

func (x *Action) GetTaskMembersListRequest() *TaskMembersListRequest {
	if x, ok := x.GetRequest().(*Action_TaskMembersListRequest); ok {
		return x.TaskMembersListRequest
	}
	return nil
}

func (x *Action) GetCreateOrUpdateDeviceRequest() *CreateOrUpdateDeviceRequest {
	if x, ok := x.GetRequest().(*Action_CreateOrUpdateDeviceRequest); ok {
		return x.CreateOrUpdateDeviceRequest
	}
	return nil
}

func (x *Action) GetDeleteDeviceRequest() *DeleteDeviceRequest {
	if x, ok := x.GetRequest().(*Action_DeleteDeviceRequest); ok {
		return x.DeleteDeviceRequest
	}
	return nil
}

func (x *Action) GetDevicesListRequest() *DevicesListRequest {
	if x, ok := x.GetRequest().(*Action_DevicesListRequest); ok {
		return x.DevicesListRequest
	}
	return nil
}

func (x *Action) GetDeleteMessageRequest() *DeleteMessageRequest {
	if x, ok := x.GetRequest().(*Action_DeleteMessageRequest); ok {
		return x.DeleteMessageRequest
	}
	return nil
}

func (x *Action) GetMessageDetailsRequest() *MessageDetailsRequest {
	if x, ok := x.GetRequest().(*Action_MessageDetailsRequest); ok {
		return x.MessageDetailsRequest
	}
	return nil
}

func (x *Action) GetMessagesListRequest() *MessagesListRequest {
	if x, ok := x.GetRequest().(*Action_MessagesListRequest); ok {
		return x.MessagesListRequest
	}
	return nil
}

func (x *Action) GetSendMessageRequest() *SendMessageRequest {
	if x, ok := x.GetRequest().(*Action_SendMessageRequest); ok {
		return x.SendMessageRequest
	}
	return nil
}

func (x *Action) GetMessageViewersRequest() *MessageViewersRequest {
	if x, ok := x.GetRequest().(*Action_MessageViewersRequest); ok {
		return x.MessageViewersRequest
	}
	return nil
}

func (x *Action) GetViewMessageRequest() *ViewMessageRequest {
	if x, ok := x.GetRequest().(*Action_ViewMessageRequest); ok {
		return x.ViewMessageRequest
	}
	return nil
}

func (x *Action) GetReactionsRequest() *ReactionsRequest {
	if x, ok := x.GetRequest().(*Action_ReactionsRequest); ok {
		return x.ReactionsRequest
	}
	return nil
}

func (x *Action) GetSetMessageReactionRequest() *SetMessageReactionRequest {
	if x, ok := x.GetRequest().(*Action_SetMessageReactionRequest); ok {
		return x.SetMessageReactionRequest
	}
	return nil
}

func (x *Action) GetBadgeRequest() *BadgeRequest {
	if x, ok := x.GetRequest().(*Action_BadgeRequest); ok {
		return x.BadgeRequest
	}
	return nil
}

func (x *Action) GetStateRequest() *StateRequest {
	if x, ok := x.GetRequest().(*Action_StateRequest); ok {
		return x.StateRequest
	}
	return nil
}

func (x *Action) GetFakeErrorRequest() *FakeErrorRequest {
	if x, ok := x.GetRequest().(*Action_FakeErrorRequest); ok {
		return x.FakeErrorRequest
	}
	return nil
}

func (x *Action) GetDeleteTokenRequest() *DeleteTokenRequest {
	if x, ok := x.GetRequest().(*Action_DeleteTokenRequest); ok {
		return x.DeleteTokenRequest
	}
	return nil
}

func (x *Action) GetTokensListRequest() *TokensListRequest {
	if x, ok := x.GetRequest().(*Action_TokensListRequest); ok {
		return x.TokensListRequest
	}
	return nil
}

func (x *Action) GetChatUploadsRequest() *ChatUploadsRequest {
	if x, ok := x.GetRequest().(*Action_ChatUploadsRequest); ok {
		return x.ChatUploadsRequest
	}
	return nil
}

func (x *Action) GetUploadIconRequest() *UploadIconRequest {
	if x, ok := x.GetRequest().(*Action_UploadIconRequest); ok {
		return x.UploadIconRequest
	}
	return nil
}

func (x *Action) GetUploadRequest() *UploadRequest {
	if x, ok := x.GetRequest().(*Action_UploadRequest); ok {
		return x.UploadRequest
	}
	return nil
}

func (x *Action) GetProfileRequest() *ProfileRequest {
	if x, ok := x.GetRequest().(*Action_ProfileRequest); ok {
		return x.ProfileRequest
	}
	return nil
}

func (x *Action) GetUpdateProfileRequest() *UpdateProfileRequest {
	if x, ok := x.GetRequest().(*Action_UpdateProfileRequest); ok {
		return x.UpdateProfileRequest
	}
	return nil
}

func (x *Action) GetUsersListRequest() *UsersListRequest {
	if x, ok := x.GetRequest().(*Action_UsersListRequest); ok {
		return x.UsersListRequest
	}
	return nil
}

type isAction_Request interface {
	isAction_Request()
}

type Action_EmailCodeAuthConfirmRequest struct {
	// auth
	EmailCodeAuthConfirmRequest *EmailCodeAuthConfirmRequest `protobuf:"bytes,27,opt,name=email_code_auth_confirm_request,json=emailCodeAuthConfirmRequest,proto3,oneof"`
}

type Action_EmailCodeAuthRequest struct {
	EmailCodeAuthRequest *EmailCodeAuthRequest `protobuf:"bytes,19,opt,name=email_code_auth_request,json=emailCodeAuthRequest,proto3,oneof"`
}

type Action_EmailPasswordAuthRequest struct {
	EmailPasswordAuthRequest *EmailPasswordAuthRequest `protobuf:"bytes,28,opt,name=email_password_auth_request,json=emailPasswordAuthRequest,proto3,oneof"`
}

type Action_LogoutRequest struct {
	LogoutRequest *LogoutRequest `protobuf:"bytes,17,opt,name=logout_request,json=logoutRequest,proto3,oneof"`
}

type Action_SetEmailConfirmRequest struct {
	SetEmailConfirmRequest *SetEmailConfirmRequest `protobuf:"bytes,47,opt,name=set_email_confirm_request,json=setEmailConfirmRequest,proto3,oneof"`
}

type Action_SetEmailRequest struct {
	SetEmailRequest *SetEmailRequest `protobuf:"bytes,46,opt,name=set_email_request,json=setEmailRequest,proto3,oneof"`
}

type Action_SetPasswordRequest struct {
	SetPasswordRequest *SetPasswordRequest `protobuf:"bytes,16,opt,name=set_password_request,json=setPasswordRequest,proto3,oneof"`
}

type Action_ChatDetailsRequest struct {
	// chats
	ChatDetailsRequest *ChatDetailsRequest `protobuf:"bytes,24,opt,name=chat_details_request,json=chatDetailsRequest,proto3,oneof"`
}

type Action_ChatEventRequest struct {
	ChatEventRequest *ChatEventRequest `protobuf:"bytes,31,opt,name=chat_event_request,json=chatEventRequest,proto3,oneof"`
}

type Action_ChatListRequest struct {
	ChatListRequest *ChatListRequest `protobuf:"bytes,25,opt,name=chat_list_request,json=chatListRequest,proto3,oneof"`
}

type Action_PinChatRequest struct {
	PinChatRequest *PinChatRequest `protobuf:"bytes,30,opt,name=pin_chat_request,json=pinChatRequest,proto3,oneof"`
}

type Action_CreateGroupRequest struct {
	// groups
	CreateGroupRequest *CreateGroupRequest `protobuf:"bytes,26,opt,name=create_group_request,json=createGroupRequest,proto3,oneof"`
}

type Action_GroupDetailsRequest struct {
	GroupDetailsRequest *GroupDetailsRequest `protobuf:"bytes,50,opt,name=group_details_request,json=groupDetailsRequest,proto3,oneof"`
}

type Action_UpdateGroupRequest struct {
	UpdateGroupRequest *UpdateGroupRequest `protobuf:"bytes,29,opt,name=update_group_request,json=updateGroupRequest,proto3,oneof"`
}

type Action_DeleteGroupRequest struct {
	DeleteGroupRequest *DeleteGroupRequest `protobuf:"bytes,65,opt,name=delete_group_request,json=deleteGroupRequest,proto3,oneof"`
}

type Action_CreateGroupMembersRequest struct {
	// group members
	CreateGroupMembersRequest *CreateGroupMembersRequest `protobuf:"bytes,38,opt,name=create_group_members_request,json=createGroupMembersRequest,proto3,oneof"`
}

type Action_GroupMembersListRequest struct {
	GroupMembersListRequest *GroupMembersListRequest `protobuf:"bytes,35,opt,name=group_members_list_request,json=groupMembersListRequest,proto3,oneof"`
}

type Action_RemoveGroupMemberRequest struct {
	RemoveGroupMemberRequest *RemoveGroupMemberRequest `protobuf:"bytes,37,opt,name=remove_group_member_request,json=removeGroupMemberRequest,proto3,oneof"`
}

type Action_UpdateGroupMemberRequest struct {
	UpdateGroupMemberRequest *UpdateGroupMemberRequest `protobuf:"bytes,49,opt,name=update_group_member_request,json=updateGroupMemberRequest,proto3,oneof"`
}

type Action_BoardDetailsRequest struct {
	// boards
	BoardDetailsRequest *BoardDetailsRequest `protobuf:"bytes,52,opt,name=board_details_request,json=boardDetailsRequest,proto3,oneof"`
}

type Action_CreateBoardRequest struct {
	CreateBoardRequest *CreateBoardRequest `protobuf:"bytes,63,opt,name=create_board_request,json=createBoardRequest,proto3,oneof"`
}

type Action_UpdateBoardRequest struct {
	UpdateBoardRequest *UpdateBoardRequest `protobuf:"bytes,64,opt,name=update_board_request,json=updateBoardRequest,proto3,oneof"`
}

type Action_BoardMembersListRequest struct {
	// board members
	BoardMembersListRequest *BoardMembersListRequest `protobuf:"bytes,58,opt,name=board_members_list_request,json=boardMembersListRequest,proto3,oneof"`
}

type Action_CreateOrUpdateBoardMembersRequest struct {
	CreateOrUpdateBoardMembersRequest *CreateOrUpdateBoardMembersRequest `protobuf:"bytes,60,opt,name=create_or_update_board_members_request,json=createOrUpdateBoardMembersRequest,proto3,oneof"`
}

type Action_RemoveBoardMembersRequest struct {
	RemoveBoardMembersRequest *RemoveBoardMembersRequest `protobuf:"bytes,62,opt,name=remove_board_members_request,json=removeBoardMembersRequest,proto3,oneof"`
}

type Action_CreateTaskRequest struct {
	// tasks
	CreateTaskRequest *CreateTaskRequest `protobuf:"bytes,54,opt,name=create_task_request,json=createTaskRequest,proto3,oneof"`
}

type Action_DeleteTaskRequest struct {
	DeleteTaskRequest *DeleteTaskRequest `protobuf:"bytes,56,opt,name=delete_task_request,json=deleteTaskRequest,proto3,oneof"`
}

type Action_UpdateTaskRequest struct {
	UpdateTaskRequest *UpdateTaskRequest `protobuf:"bytes,55,opt,name=update_task_request,json=updateTaskRequest,proto3,oneof"`
}

type Action_CreateOrUpdateTaskMembersRequest struct {
	// task members
	CreateOrUpdateTaskMembersRequest *CreateOrUpdateTaskMembersRequest `protobuf:"bytes,68,opt,name=create_or_update_task_members_request,json=createOrUpdateTaskMembersRequest,proto3,oneof"`
}

type Action_RemoveTaskMembersRequest struct {
	RemoveTaskMembersRequest *RemoveTaskMembersRequest `protobuf:"bytes,69,opt,name=remove_task_members_request,json=removeTaskMembersRequest,proto3,oneof"`
}

type Action_TaskMembersListRequest struct {
	TaskMembersListRequest *TaskMembersListRequest `protobuf:"bytes,66,opt,name=task_members_list_request,json=taskMembersListRequest,proto3,oneof"`
}

type Action_CreateOrUpdateDeviceRequest struct {
	// devices
	CreateOrUpdateDeviceRequest *CreateOrUpdateDeviceRequest `protobuf:"bytes,10,opt,name=create_or_update_device_request,json=createOrUpdateDeviceRequest,proto3,oneof"`
}

type Action_DeleteDeviceRequest struct {
	DeleteDeviceRequest *DeleteDeviceRequest `protobuf:"bytes,12,opt,name=delete_device_request,json=deleteDeviceRequest,proto3,oneof"`
}

type Action_DevicesListRequest struct {
	DevicesListRequest *DevicesListRequest `protobuf:"bytes,11,opt,name=devices_list_request,json=devicesListRequest,proto3,oneof"`
}

type Action_DeleteMessageRequest struct {
	// messages
	DeleteMessageRequest *DeleteMessageRequest `protobuf:"bytes,36,opt,name=delete_message_request,json=deleteMessageRequest,proto3,oneof"`
}

type Action_MessageDetailsRequest struct {
	MessageDetailsRequest *MessageDetailsRequest `protobuf:"bytes,32,opt,name=message_details_request,json=messageDetailsRequest,proto3,oneof"`
}

type Action_MessagesListRequest struct {
	MessagesListRequest *MessagesListRequest `protobuf:"bytes,23,opt,name=messages_list_request,json=messagesListRequest,proto3,oneof"`
}

type Action_SendMessageRequest struct {
	SendMessageRequest *SendMessageRequest `protobuf:"bytes,22,opt,name=send_message_request,json=sendMessageRequest,proto3,oneof"`
}

type Action_MessageViewersRequest struct {
	// message views
	MessageViewersRequest *MessageViewersRequest `protobuf:"bytes,34,opt,name=message_viewers_request,json=messageViewersRequest,proto3,oneof"`
}

type Action_ViewMessageRequest struct {
	ViewMessageRequest *ViewMessageRequest `protobuf:"bytes,33,opt,name=view_message_request,json=viewMessageRequest,proto3,oneof"`
}

type Action_ReactionsRequest struct {
	// message reactions
	ReactionsRequest *ReactionsRequest `protobuf:"bytes,44,opt,name=reactions_request,json=reactionsRequest,proto3,oneof"`
}

type Action_SetMessageReactionRequest struct {
	SetMessageReactionRequest *SetMessageReactionRequest `protobuf:"bytes,43,opt,name=set_message_reaction_request,json=setMessageReactionRequest,proto3,oneof"`
}

type Action_BadgeRequest struct {
	// state
	BadgeRequest *BadgeRequest `protobuf:"bytes,45,opt,name=badge_request,json=badgeRequest,proto3,oneof"`
}

type Action_StateRequest struct {
	StateRequest *StateRequest `protobuf:"bytes,15,opt,name=state_request,json=stateRequest,proto3,oneof"` // works without ClientRequest.token
}

type Action_FakeErrorRequest struct {
	FakeErrorRequest *FakeErrorRequest `protobuf:"bytes,51,opt,name=fake_error_request,json=fakeErrorRequest,proto3,oneof"`
}

type Action_DeleteTokenRequest struct {
	// tokens
	DeleteTokenRequest *DeleteTokenRequest `protobuf:"bytes,14,opt,name=delete_token_request,json=deleteTokenRequest,proto3,oneof"`
}

type Action_TokensListRequest struct {
	TokensListRequest *TokensListRequest `protobuf:"bytes,13,opt,name=tokens_list_request,json=tokensListRequest,proto3,oneof"`
}

type Action_ChatUploadsRequest struct {
	// uploads
	ChatUploadsRequest *ChatUploadsRequest `protobuf:"bytes,40,opt,name=chat_uploads_request,json=chatUploadsRequest,proto3,oneof"`
}

type Action_UploadIconRequest struct {
	UploadIconRequest *UploadIconRequest `protobuf:"bytes,48,opt,name=upload_icon_request,json=uploadIconRequest,proto3,oneof"`
}

type Action_UploadRequest struct {
	UploadRequest *UploadRequest `protobuf:"bytes,39,opt,name=upload_request,json=uploadRequest,proto3,oneof"`
}

type Action_ProfileRequest struct {
	// users
	ProfileRequest *ProfileRequest `protobuf:"bytes,18,opt,name=profile_request,json=profileRequest,proto3,oneof"`
}

type Action_UpdateProfileRequest struct {
	UpdateProfileRequest *UpdateProfileRequest `protobuf:"bytes,21,opt,name=update_profile_request,json=updateProfileRequest,proto3,oneof"`
}

type Action_UsersListRequest struct {
	UsersListRequest *UsersListRequest `protobuf:"bytes,20,opt,name=users_list_request,json=usersListRequest,proto3,oneof"`
}

func (*Action_EmailCodeAuthConfirmRequest) isAction_Request() {}

func (*Action_EmailCodeAuthRequest) isAction_Request() {}

func (*Action_EmailPasswordAuthRequest) isAction_Request() {}

func (*Action_LogoutRequest) isAction_Request() {}

func (*Action_SetEmailConfirmRequest) isAction_Request() {}

func (*Action_SetEmailRequest) isAction_Request() {}

func (*Action_SetPasswordRequest) isAction_Request() {}

func (*Action_ChatDetailsRequest) isAction_Request() {}

func (*Action_ChatEventRequest) isAction_Request() {}

func (*Action_ChatListRequest) isAction_Request() {}

func (*Action_PinChatRequest) isAction_Request() {}

func (*Action_CreateGroupRequest) isAction_Request() {}

func (*Action_GroupDetailsRequest) isAction_Request() {}

func (*Action_UpdateGroupRequest) isAction_Request() {}

func (*Action_DeleteGroupRequest) isAction_Request() {}

func (*Action_CreateGroupMembersRequest) isAction_Request() {}

func (*Action_GroupMembersListRequest) isAction_Request() {}

func (*Action_RemoveGroupMemberRequest) isAction_Request() {}

func (*Action_UpdateGroupMemberRequest) isAction_Request() {}

func (*Action_BoardDetailsRequest) isAction_Request() {}

func (*Action_CreateBoardRequest) isAction_Request() {}

func (*Action_UpdateBoardRequest) isAction_Request() {}

func (*Action_BoardMembersListRequest) isAction_Request() {}

func (*Action_CreateOrUpdateBoardMembersRequest) isAction_Request() {}

func (*Action_RemoveBoardMembersRequest) isAction_Request() {}

func (*Action_CreateTaskRequest) isAction_Request() {}

func (*Action_DeleteTaskRequest) isAction_Request() {}

func (*Action_UpdateTaskRequest) isAction_Request() {}

func (*Action_CreateOrUpdateTaskMembersRequest) isAction_Request() {}

func (*Action_RemoveTaskMembersRequest) isAction_Request() {}

func (*Action_TaskMembersListRequest) isAction_Request() {}

func (*Action_CreateOrUpdateDeviceRequest) isAction_Request() {}

func (*Action_DeleteDeviceRequest) isAction_Request() {}

func (*Action_DevicesListRequest) isAction_Request() {}

func (*Action_DeleteMessageRequest) isAction_Request() {}

func (*Action_MessageDetailsRequest) isAction_Request() {}

func (*Action_MessagesListRequest) isAction_Request() {}

func (*Action_SendMessageRequest) isAction_Request() {}

func (*Action_MessageViewersRequest) isAction_Request() {}

func (*Action_ViewMessageRequest) isAction_Request() {}

func (*Action_ReactionsRequest) isAction_Request() {}

func (*Action_SetMessageReactionRequest) isAction_Request() {}

func (*Action_BadgeRequest) isAction_Request() {}

func (*Action_StateRequest) isAction_Request() {}

func (*Action_FakeErrorRequest) isAction_Request() {}

func (*Action_DeleteTokenRequest) isAction_Request() {}

func (*Action_TokensListRequest) isAction_Request() {}

func (*Action_ChatUploadsRequest) isAction_Request() {}

func (*Action_UploadIconRequest) isAction_Request() {}

func (*Action_UploadRequest) isAction_Request() {}

func (*Action_ProfileRequest) isAction_Request() {}

func (*Action_UpdateProfileRequest) isAction_Request() {}

func (*Action_UsersListRequest) isAction_Request() {}

type InvalidActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InvalidActionResponse) Reset() {
	*x = InvalidActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidActionResponse) ProtoMessage() {}

func (x *InvalidActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidActionResponse.ProtoReflect.Descriptor instead.
func (*InvalidActionResponse) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{3}
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*Result_InvalidActionResponse
	//	*Result_EmailCodeAuthConfirmResponse
	//	*Result_EmailCodeAuthResponse
	//	*Result_EmailPasswordAuthResponse
	//	*Result_LogoutResponse
	//	*Result_SetEmailConfirmResponse
	//	*Result_SetEmailResponse
	//	*Result_SetPasswordResponse
	//	*Result_ChatDetailsResponse
	//	*Result_ChatEventResponse
	//	*Result_ChatListResponse
	//	*Result_PinChatResponse
	//	*Result_CreateGroupResponse
	//	*Result_GroupDetailsResponse
	//	*Result_UpdateGroupResponse
	//	*Result_DeleteGroupResponse
	//	*Result_CreateGroupMembersResponse
	//	*Result_GroupMembersListResponse
	//	*Result_RemoveGroupMemberResponse
	//	*Result_UpdateGroupMemberResponse
	//	*Result_BoardDetailsResponse
	//	*Result_CreateBoardResponse
	//	*Result_UpdateBoardResponse
	//	*Result_BoardMembersListResponse
	//	*Result_CreateOrUpdateBoardMembersResponse
	//	*Result_RemoveBoardMembersResponse
	//	*Result_CreateTaskResponse
	//	*Result_DeleteTaskResponse
	//	*Result_UpdateTaskResponse
	//	*Result_CreateOrUpdateTaskMembersResponse
	//	*Result_RemoveTaskMembersResponse
	//	*Result_TaskMembersListResponse
	//	*Result_CreateOrUpdateDeviceResponse
	//	*Result_DeleteDeviceResponse
	//	*Result_DevicesListResponse
	//	*Result_DeleteMessageResponse
	//	*Result_MessageDetailsResponse
	//	*Result_MessagesListResponse
	//	*Result_SendMessageResponse
	//	*Result_MessageViewersResponse
	//	*Result_ViewMessageResponse
	//	*Result_ReactionsResponse
	//	*Result_SetMessageReactionResponse
	//	*Result_BadgeResponse
	//	*Result_StateResponse
	//	*Result_DeleteTokenResponse
	//	*Result_TokensListResponse
	//	*Result_ChatUploadsResponse
	//	*Result_UploadIconResponse
	//	*Result_UploadResponse
	//	*Result_ProfileResponse
	//	*Result_UpdateProfileResponse
	//	*Result_UsersListResponse
	Response isResult_Response `protobuf_oneof:"response"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{4}
}

func (m *Result) GetResponse() isResult_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *Result) GetInvalidActionResponse() *InvalidActionResponse {
	if x, ok := x.GetResponse().(*Result_InvalidActionResponse); ok {
		return x.InvalidActionResponse
	}
	return nil
}

func (x *Result) GetEmailCodeAuthConfirmResponse() *EmailCodeAuthConfirmResponse {
	if x, ok := x.GetResponse().(*Result_EmailCodeAuthConfirmResponse); ok {
		return x.EmailCodeAuthConfirmResponse
	}
	return nil
}

func (x *Result) GetEmailCodeAuthResponse() *EmailCodeAuthResponse {
	if x, ok := x.GetResponse().(*Result_EmailCodeAuthResponse); ok {
		return x.EmailCodeAuthResponse
	}
	return nil
}

func (x *Result) GetEmailPasswordAuthResponse() *EmailPasswordAuthResponse {
	if x, ok := x.GetResponse().(*Result_EmailPasswordAuthResponse); ok {
		return x.EmailPasswordAuthResponse
	}
	return nil
}

func (x *Result) GetLogoutResponse() *LogoutResponse {
	if x, ok := x.GetResponse().(*Result_LogoutResponse); ok {
		return x.LogoutResponse
	}
	return nil
}

func (x *Result) GetSetEmailConfirmResponse() *SetEmailConfirmResponse {
	if x, ok := x.GetResponse().(*Result_SetEmailConfirmResponse); ok {
		return x.SetEmailConfirmResponse
	}
	return nil
}

func (x *Result) GetSetEmailResponse() *SetEmailResponse {
	if x, ok := x.GetResponse().(*Result_SetEmailResponse); ok {
		return x.SetEmailResponse
	}
	return nil
}

func (x *Result) GetSetPasswordResponse() *SetPasswordResponse {
	if x, ok := x.GetResponse().(*Result_SetPasswordResponse); ok {
		return x.SetPasswordResponse
	}
	return nil
}

func (x *Result) GetChatDetailsResponse() *ChatDetailsResponse {
	if x, ok := x.GetResponse().(*Result_ChatDetailsResponse); ok {
		return x.ChatDetailsResponse
	}
	return nil
}

func (x *Result) GetChatEventResponse() *ChatEventResponse {
	if x, ok := x.GetResponse().(*Result_ChatEventResponse); ok {
		return x.ChatEventResponse
	}
	return nil
}

func (x *Result) GetChatListResponse() *ChatListResponse {
	if x, ok := x.GetResponse().(*Result_ChatListResponse); ok {
		return x.ChatListResponse
	}
	return nil
}

func (x *Result) GetPinChatResponse() *PinChatResponse {
	if x, ok := x.GetResponse().(*Result_PinChatResponse); ok {
		return x.PinChatResponse
	}
	return nil
}

func (x *Result) GetCreateGroupResponse() *CreateGroupResponse {
	if x, ok := x.GetResponse().(*Result_CreateGroupResponse); ok {
		return x.CreateGroupResponse
	}
	return nil
}

func (x *Result) GetGroupDetailsResponse() *GroupDetailsResponse {
	if x, ok := x.GetResponse().(*Result_GroupDetailsResponse); ok {
		return x.GroupDetailsResponse
	}
	return nil
}

func (x *Result) GetUpdateGroupResponse() *UpdateGroupResponse {
	if x, ok := x.GetResponse().(*Result_UpdateGroupResponse); ok {
		return x.UpdateGroupResponse
	}
	return nil
}

func (x *Result) GetDeleteGroupResponse() *DeleteGroupResponse {
	if x, ok := x.GetResponse().(*Result_DeleteGroupResponse); ok {
		return x.DeleteGroupResponse
	}
	return nil
}

func (x *Result) GetCreateGroupMembersResponse() *CreateGroupMembersResponse {
	if x, ok := x.GetResponse().(*Result_CreateGroupMembersResponse); ok {
		return x.CreateGroupMembersResponse
	}
	return nil
}

func (x *Result) GetGroupMembersListResponse() *GroupMembersListResponse {
	if x, ok := x.GetResponse().(*Result_GroupMembersListResponse); ok {
		return x.GroupMembersListResponse
	}
	return nil
}

func (x *Result) GetRemoveGroupMemberResponse() *RemoveGroupMemberResponse {
	if x, ok := x.GetResponse().(*Result_RemoveGroupMemberResponse); ok {
		return x.RemoveGroupMemberResponse
	}
	return nil
}

func (x *Result) GetUpdateGroupMemberResponse() *UpdateGroupMemberResponse {
	if x, ok := x.GetResponse().(*Result_UpdateGroupMemberResponse); ok {
		return x.UpdateGroupMemberResponse
	}
	return nil
}

func (x *Result) GetBoardDetailsResponse() *BoardDetailsResponse {
	if x, ok := x.GetResponse().(*Result_BoardDetailsResponse); ok {
		return x.BoardDetailsResponse
	}
	return nil
}

func (x *Result) GetCreateBoardResponse() *CreateBoardResponse {
	if x, ok := x.GetResponse().(*Result_CreateBoardResponse); ok {
		return x.CreateBoardResponse
	}
	return nil
}

func (x *Result) GetUpdateBoardResponse() *UpdateBoardResponse {
	if x, ok := x.GetResponse().(*Result_UpdateBoardResponse); ok {
		return x.UpdateBoardResponse
	}
	return nil
}

func (x *Result) GetBoardMembersListResponse() *BoardMembersListResponse {
	if x, ok := x.GetResponse().(*Result_BoardMembersListResponse); ok {
		return x.BoardMembersListResponse
	}
	return nil
}

func (x *Result) GetCreateOrUpdateBoardMembersResponse() *CreateOrUpdateBoardMembersResponse {
	if x, ok := x.GetResponse().(*Result_CreateOrUpdateBoardMembersResponse); ok {
		return x.CreateOrUpdateBoardMembersResponse
	}
	return nil
}

func (x *Result) GetRemoveBoardMembersResponse() *RemoveBoardMembersResponse {
	if x, ok := x.GetResponse().(*Result_RemoveBoardMembersResponse); ok {
		return x.RemoveBoardMembersResponse
	}
	return nil
}

func (x *Result) GetCreateTaskResponse() *CreateTaskResponse {
	if x, ok := x.GetResponse().(*Result_CreateTaskResponse); ok {
		return x.CreateTaskResponse
	}
	return nil
}

func (x *Result) GetDeleteTaskResponse() *DeleteTaskResponse {
	if x, ok := x.GetResponse().(*Result_DeleteTaskResponse); ok {
		return x.DeleteTaskResponse
	}
	return nil
}

func (x *Result) GetUpdateTaskResponse() *UpdateTaskResponse {
	if x, ok := x.GetResponse().(*Result_UpdateTaskResponse); ok {
		return x.UpdateTaskResponse
	}
	return nil
}

func (x *Result) GetCreateOrUpdateTaskMembersResponse() *CreateOrUpdateTaskMembersResponse {
	if x, ok := x.GetResponse().(*Result_CreateOrUpdateTaskMembersResponse); ok {
		return x.CreateOrUpdateTaskMembersResponse
	}
	return nil
}

func (x *Result) GetRemoveTaskMembersResponse() *RemoveTaskMembersResponse {
	if x, ok := x.GetResponse().(*Result_RemoveTaskMembersResponse); ok {
		return x.RemoveTaskMembersResponse
	}
	return nil
}

func (x *Result) GetTaskMembersListResponse() *TaskMembersListResponse {
	if x, ok := x.GetResponse().(*Result_TaskMembersListResponse); ok {
		return x.TaskMembersListResponse
	}
	return nil
}

func (x *Result) GetCreateOrUpdateDeviceResponse() *CreateOrUpdateDeviceResponse {
	if x, ok := x.GetResponse().(*Result_CreateOrUpdateDeviceResponse); ok {
		return x.CreateOrUpdateDeviceResponse
	}
	return nil
}

func (x *Result) GetDeleteDeviceResponse() *DeleteDeviceResponse {
	if x, ok := x.GetResponse().(*Result_DeleteDeviceResponse); ok {
		return x.DeleteDeviceResponse
	}
	return nil
}

func (x *Result) GetDevicesListResponse() *DevicesListResponse {
	if x, ok := x.GetResponse().(*Result_DevicesListResponse); ok {
		return x.DevicesListResponse
	}
	return nil
}

func (x *Result) GetDeleteMessageResponse() *DeleteMessageResponse {
	if x, ok := x.GetResponse().(*Result_DeleteMessageResponse); ok {
		return x.DeleteMessageResponse
	}
	return nil
}

func (x *Result) GetMessageDetailsResponse() *MessageDetailsResponse {
	if x, ok := x.GetResponse().(*Result_MessageDetailsResponse); ok {
		return x.MessageDetailsResponse
	}
	return nil
}

func (x *Result) GetMessagesListResponse() *MessagesListResponse {
	if x, ok := x.GetResponse().(*Result_MessagesListResponse); ok {
		return x.MessagesListResponse
	}
	return nil
}

func (x *Result) GetSendMessageResponse() *SendMessageResponse {
	if x, ok := x.GetResponse().(*Result_SendMessageResponse); ok {
		return x.SendMessageResponse
	}
	return nil
}

func (x *Result) GetMessageViewersResponse() *MessageViewersResponse {
	if x, ok := x.GetResponse().(*Result_MessageViewersResponse); ok {
		return x.MessageViewersResponse
	}
	return nil
}

func (x *Result) GetViewMessageResponse() *ViewMessageResponse {
	if x, ok := x.GetResponse().(*Result_ViewMessageResponse); ok {
		return x.ViewMessageResponse
	}
	return nil
}

func (x *Result) GetReactionsResponse() *ReactionsResponse {
	if x, ok := x.GetResponse().(*Result_ReactionsResponse); ok {
		return x.ReactionsResponse
	}
	return nil
}

func (x *Result) GetSetMessageReactionResponse() *SetMessageReactionResponse {
	if x, ok := x.GetResponse().(*Result_SetMessageReactionResponse); ok {
		return x.SetMessageReactionResponse
	}
	return nil
}

func (x *Result) GetBadgeResponse() *BadgeResponse {
	if x, ok := x.GetResponse().(*Result_BadgeResponse); ok {
		return x.BadgeResponse
	}
	return nil
}

func (x *Result) GetStateResponse() *StateResponse {
	if x, ok := x.GetResponse().(*Result_StateResponse); ok {
		return x.StateResponse
	}
	return nil
}

func (x *Result) GetDeleteTokenResponse() *DeleteTokenResponse {
	if x, ok := x.GetResponse().(*Result_DeleteTokenResponse); ok {
		return x.DeleteTokenResponse
	}
	return nil
}

func (x *Result) GetTokensListResponse() *TokensListResponse {
	if x, ok := x.GetResponse().(*Result_TokensListResponse); ok {
		return x.TokensListResponse
	}
	return nil
}

func (x *Result) GetChatUploadsResponse() *ChatUploadsResponse {
	if x, ok := x.GetResponse().(*Result_ChatUploadsResponse); ok {
		return x.ChatUploadsResponse
	}
	return nil
}

func (x *Result) GetUploadIconResponse() *UploadIconResponse {
	if x, ok := x.GetResponse().(*Result_UploadIconResponse); ok {
		return x.UploadIconResponse
	}
	return nil
}

func (x *Result) GetUploadResponse() *UploadResponse {
	if x, ok := x.GetResponse().(*Result_UploadResponse); ok {
		return x.UploadResponse
	}
	return nil
}

func (x *Result) GetProfileResponse() *ProfileResponse {
	if x, ok := x.GetResponse().(*Result_ProfileResponse); ok {
		return x.ProfileResponse
	}
	return nil
}

func (x *Result) GetUpdateProfileResponse() *UpdateProfileResponse {
	if x, ok := x.GetResponse().(*Result_UpdateProfileResponse); ok {
		return x.UpdateProfileResponse
	}
	return nil
}

func (x *Result) GetUsersListResponse() *UsersListResponse {
	if x, ok := x.GetResponse().(*Result_UsersListResponse); ok {
		return x.UsersListResponse
	}
	return nil
}

type isResult_Response interface {
	isResult_Response()
}

type Result_InvalidActionResponse struct {
	InvalidActionResponse *InvalidActionResponse `protobuf:"bytes,2,opt,name=invalid_action_response,json=invalidActionResponse,proto3,oneof"`
}

type Result_EmailCodeAuthConfirmResponse struct {
	// auth
	EmailCodeAuthConfirmResponse *EmailCodeAuthConfirmResponse `protobuf:"bytes,27,opt,name=email_code_auth_confirm_response,json=emailCodeAuthConfirmResponse,proto3,oneof"`
}

type Result_EmailCodeAuthResponse struct {
	EmailCodeAuthResponse *EmailCodeAuthResponse `protobuf:"bytes,19,opt,name=email_code_auth_response,json=emailCodeAuthResponse,proto3,oneof"`
}

type Result_EmailPasswordAuthResponse struct {
	EmailPasswordAuthResponse *EmailPasswordAuthResponse `protobuf:"bytes,28,opt,name=email_password_auth_response,json=emailPasswordAuthResponse,proto3,oneof"`
}

type Result_LogoutResponse struct {
	LogoutResponse *LogoutResponse `protobuf:"bytes,17,opt,name=logout_response,json=logoutResponse,proto3,oneof"`
}

type Result_SetEmailConfirmResponse struct {
	SetEmailConfirmResponse *SetEmailConfirmResponse `protobuf:"bytes,47,opt,name=set_email_confirm_response,json=setEmailConfirmResponse,proto3,oneof"`
}

type Result_SetEmailResponse struct {
	SetEmailResponse *SetEmailResponse `protobuf:"bytes,46,opt,name=set_email_response,json=setEmailResponse,proto3,oneof"`
}

type Result_SetPasswordResponse struct {
	SetPasswordResponse *SetPasswordResponse `protobuf:"bytes,16,opt,name=set_password_response,json=setPasswordResponse,proto3,oneof"`
}

type Result_ChatDetailsResponse struct {
	// chats
	ChatDetailsResponse *ChatDetailsResponse `protobuf:"bytes,24,opt,name=chat_details_response,json=chatDetailsResponse,proto3,oneof"`
}

type Result_ChatEventResponse struct {
	ChatEventResponse *ChatEventResponse `protobuf:"bytes,31,opt,name=chat_event_response,json=chatEventResponse,proto3,oneof"`
}

type Result_ChatListResponse struct {
	ChatListResponse *ChatListResponse `protobuf:"bytes,25,opt,name=chat_list_response,json=chatListResponse,proto3,oneof"`
}

type Result_PinChatResponse struct {
	PinChatResponse *PinChatResponse `protobuf:"bytes,30,opt,name=pin_chat_response,json=pinChatResponse,proto3,oneof"`
}

type Result_CreateGroupResponse struct {
	// groups
	CreateGroupResponse *CreateGroupResponse `protobuf:"bytes,26,opt,name=create_group_response,json=createGroupResponse,proto3,oneof"`
}

type Result_GroupDetailsResponse struct {
	GroupDetailsResponse *GroupDetailsResponse `protobuf:"bytes,50,opt,name=group_details_response,json=groupDetailsResponse,proto3,oneof"`
}

type Result_UpdateGroupResponse struct {
	UpdateGroupResponse *UpdateGroupResponse `protobuf:"bytes,29,opt,name=update_group_response,json=updateGroupResponse,proto3,oneof"`
}

type Result_DeleteGroupResponse struct {
	DeleteGroupResponse *DeleteGroupResponse `protobuf:"bytes,65,opt,name=delete_group_response,json=deleteGroupResponse,proto3,oneof"`
}

type Result_CreateGroupMembersResponse struct {
	// group members
	CreateGroupMembersResponse *CreateGroupMembersResponse `protobuf:"bytes,38,opt,name=create_group_members_response,json=createGroupMembersResponse,proto3,oneof"`
}

type Result_GroupMembersListResponse struct {
	GroupMembersListResponse *GroupMembersListResponse `protobuf:"bytes,35,opt,name=group_members_list_response,json=groupMembersListResponse,proto3,oneof"`
}

type Result_RemoveGroupMemberResponse struct {
	RemoveGroupMemberResponse *RemoveGroupMemberResponse `protobuf:"bytes,37,opt,name=remove_group_member_response,json=removeGroupMemberResponse,proto3,oneof"`
}

type Result_UpdateGroupMemberResponse struct {
	UpdateGroupMemberResponse *UpdateGroupMemberResponse `protobuf:"bytes,49,opt,name=update_group_member_response,json=updateGroupMemberResponse,proto3,oneof"`
}

type Result_BoardDetailsResponse struct {
	// boards
	BoardDetailsResponse *BoardDetailsResponse `protobuf:"bytes,52,opt,name=board_details_response,json=boardDetailsResponse,proto3,oneof"`
}

type Result_CreateBoardResponse struct {
	CreateBoardResponse *CreateBoardResponse `protobuf:"bytes,63,opt,name=create_board_response,json=createBoardResponse,proto3,oneof"`
}

type Result_UpdateBoardResponse struct {
	UpdateBoardResponse *UpdateBoardResponse `protobuf:"bytes,64,opt,name=update_board_response,json=updateBoardResponse,proto3,oneof"`
}

type Result_BoardMembersListResponse struct {
	// board members
	BoardMembersListResponse *BoardMembersListResponse `protobuf:"bytes,58,opt,name=board_members_list_response,json=boardMembersListResponse,proto3,oneof"`
}

type Result_CreateOrUpdateBoardMembersResponse struct {
	CreateOrUpdateBoardMembersResponse *CreateOrUpdateBoardMembersResponse `protobuf:"bytes,60,opt,name=create_or_update_board_members_response,json=createOrUpdateBoardMembersResponse,proto3,oneof"`
}

type Result_RemoveBoardMembersResponse struct {
	RemoveBoardMembersResponse *RemoveBoardMembersResponse `protobuf:"bytes,62,opt,name=remove_board_members_response,json=removeBoardMembersResponse,proto3,oneof"`
}

type Result_CreateTaskResponse struct {
	// tasks
	CreateTaskResponse *CreateTaskResponse `protobuf:"bytes,54,opt,name=create_task_response,json=createTaskResponse,proto3,oneof"`
}

type Result_DeleteTaskResponse struct {
	DeleteTaskResponse *DeleteTaskResponse `protobuf:"bytes,56,opt,name=delete_task_response,json=deleteTaskResponse,proto3,oneof"`
}

type Result_UpdateTaskResponse struct {
	UpdateTaskResponse *UpdateTaskResponse `protobuf:"bytes,55,opt,name=update_task_response,json=updateTaskResponse,proto3,oneof"`
}

type Result_CreateOrUpdateTaskMembersResponse struct {
	// task members
	CreateOrUpdateTaskMembersResponse *CreateOrUpdateTaskMembersResponse `protobuf:"bytes,68,opt,name=create_or_update_task_members_response,json=createOrUpdateTaskMembersResponse,proto3,oneof"`
}

type Result_RemoveTaskMembersResponse struct {
	RemoveTaskMembersResponse *RemoveTaskMembersResponse `protobuf:"bytes,69,opt,name=remove_task_members_response,json=removeTaskMembersResponse,proto3,oneof"`
}

type Result_TaskMembersListResponse struct {
	TaskMembersListResponse *TaskMembersListResponse `protobuf:"bytes,66,opt,name=task_members_list_response,json=taskMembersListResponse,proto3,oneof"`
}

type Result_CreateOrUpdateDeviceResponse struct {
	// devices
	CreateOrUpdateDeviceResponse *CreateOrUpdateDeviceResponse `protobuf:"bytes,10,opt,name=create_or_update_device_response,json=createOrUpdateDeviceResponse,proto3,oneof"`
}

type Result_DeleteDeviceResponse struct {
	DeleteDeviceResponse *DeleteDeviceResponse `protobuf:"bytes,12,opt,name=delete_device_response,json=deleteDeviceResponse,proto3,oneof"`
}

type Result_DevicesListResponse struct {
	DevicesListResponse *DevicesListResponse `protobuf:"bytes,11,opt,name=devices_list_response,json=devicesListResponse,proto3,oneof"`
}

type Result_DeleteMessageResponse struct {
	// messages
	DeleteMessageResponse *DeleteMessageResponse `protobuf:"bytes,36,opt,name=delete_message_response,json=deleteMessageResponse,proto3,oneof"`
}

type Result_MessageDetailsResponse struct {
	MessageDetailsResponse *MessageDetailsResponse `protobuf:"bytes,32,opt,name=message_details_response,json=messageDetailsResponse,proto3,oneof"`
}

type Result_MessagesListResponse struct {
	MessagesListResponse *MessagesListResponse `protobuf:"bytes,23,opt,name=messages_list_response,json=messagesListResponse,proto3,oneof"`
}

type Result_SendMessageResponse struct {
	SendMessageResponse *SendMessageResponse `protobuf:"bytes,22,opt,name=send_message_response,json=sendMessageResponse,proto3,oneof"`
}

type Result_MessageViewersResponse struct {
	// message views
	MessageViewersResponse *MessageViewersResponse `protobuf:"bytes,34,opt,name=message_viewers_response,json=messageViewersResponse,proto3,oneof"`
}

type Result_ViewMessageResponse struct {
	ViewMessageResponse *ViewMessageResponse `protobuf:"bytes,33,opt,name=view_message_response,json=viewMessageResponse,proto3,oneof"`
}

type Result_ReactionsResponse struct {
	// message reactions
	ReactionsResponse *ReactionsResponse `protobuf:"bytes,44,opt,name=reactions_response,json=reactionsResponse,proto3,oneof"`
}

type Result_SetMessageReactionResponse struct {
	SetMessageReactionResponse *SetMessageReactionResponse `protobuf:"bytes,43,opt,name=set_message_reaction_response,json=setMessageReactionResponse,proto3,oneof"`
}

type Result_BadgeResponse struct {
	// state
	BadgeResponse *BadgeResponse `protobuf:"bytes,45,opt,name=badge_response,json=badgeResponse,proto3,oneof"`
}

type Result_StateResponse struct {
	StateResponse *StateResponse `protobuf:"bytes,15,opt,name=state_response,json=stateResponse,proto3,oneof"`
}

type Result_DeleteTokenResponse struct {
	// tokens
	DeleteTokenResponse *DeleteTokenResponse `protobuf:"bytes,14,opt,name=delete_token_response,json=deleteTokenResponse,proto3,oneof"`
}

type Result_TokensListResponse struct {
	TokensListResponse *TokensListResponse `protobuf:"bytes,13,opt,name=tokens_list_response,json=tokensListResponse,proto3,oneof"`
}

type Result_ChatUploadsResponse struct {
	// uploads
	ChatUploadsResponse *ChatUploadsResponse `protobuf:"bytes,40,opt,name=chat_uploads_response,json=chatUploadsResponse,proto3,oneof"`
}

type Result_UploadIconResponse struct {
	UploadIconResponse *UploadIconResponse `protobuf:"bytes,48,opt,name=upload_icon_response,json=uploadIconResponse,proto3,oneof"`
}

type Result_UploadResponse struct {
	UploadResponse *UploadResponse `protobuf:"bytes,39,opt,name=upload_response,json=uploadResponse,proto3,oneof"`
}

type Result_ProfileResponse struct {
	// users
	ProfileResponse *ProfileResponse `protobuf:"bytes,18,opt,name=profile_response,json=profileResponse,proto3,oneof"`
}

type Result_UpdateProfileResponse struct {
	UpdateProfileResponse *UpdateProfileResponse `protobuf:"bytes,21,opt,name=update_profile_response,json=updateProfileResponse,proto3,oneof"`
}

type Result_UsersListResponse struct {
	UsersListResponse *UsersListResponse `protobuf:"bytes,20,opt,name=users_list_response,json=usersListResponse,proto3,oneof"`
}

func (*Result_InvalidActionResponse) isResult_Response() {}

func (*Result_EmailCodeAuthConfirmResponse) isResult_Response() {}

func (*Result_EmailCodeAuthResponse) isResult_Response() {}

func (*Result_EmailPasswordAuthResponse) isResult_Response() {}

func (*Result_LogoutResponse) isResult_Response() {}

func (*Result_SetEmailConfirmResponse) isResult_Response() {}

func (*Result_SetEmailResponse) isResult_Response() {}

func (*Result_SetPasswordResponse) isResult_Response() {}

func (*Result_ChatDetailsResponse) isResult_Response() {}

func (*Result_ChatEventResponse) isResult_Response() {}

func (*Result_ChatListResponse) isResult_Response() {}

func (*Result_PinChatResponse) isResult_Response() {}

func (*Result_CreateGroupResponse) isResult_Response() {}

func (*Result_GroupDetailsResponse) isResult_Response() {}

func (*Result_UpdateGroupResponse) isResult_Response() {}

func (*Result_DeleteGroupResponse) isResult_Response() {}

func (*Result_CreateGroupMembersResponse) isResult_Response() {}

func (*Result_GroupMembersListResponse) isResult_Response() {}

func (*Result_RemoveGroupMemberResponse) isResult_Response() {}

func (*Result_UpdateGroupMemberResponse) isResult_Response() {}

func (*Result_BoardDetailsResponse) isResult_Response() {}

func (*Result_CreateBoardResponse) isResult_Response() {}

func (*Result_UpdateBoardResponse) isResult_Response() {}

func (*Result_BoardMembersListResponse) isResult_Response() {}

func (*Result_CreateOrUpdateBoardMembersResponse) isResult_Response() {}

func (*Result_RemoveBoardMembersResponse) isResult_Response() {}

func (*Result_CreateTaskResponse) isResult_Response() {}

func (*Result_DeleteTaskResponse) isResult_Response() {}

func (*Result_UpdateTaskResponse) isResult_Response() {}

func (*Result_CreateOrUpdateTaskMembersResponse) isResult_Response() {}

func (*Result_RemoveTaskMembersResponse) isResult_Response() {}

func (*Result_TaskMembersListResponse) isResult_Response() {}

func (*Result_CreateOrUpdateDeviceResponse) isResult_Response() {}

func (*Result_DeleteDeviceResponse) isResult_Response() {}

func (*Result_DevicesListResponse) isResult_Response() {}

func (*Result_DeleteMessageResponse) isResult_Response() {}

func (*Result_MessageDetailsResponse) isResult_Response() {}

func (*Result_MessagesListResponse) isResult_Response() {}

func (*Result_SendMessageResponse) isResult_Response() {}

func (*Result_MessageViewersResponse) isResult_Response() {}

func (*Result_ViewMessageResponse) isResult_Response() {}

func (*Result_ReactionsResponse) isResult_Response() {}

func (*Result_SetMessageReactionResponse) isResult_Response() {}

func (*Result_BadgeResponse) isResult_Response() {}

func (*Result_StateResponse) isResult_Response() {}

func (*Result_DeleteTokenResponse) isResult_Response() {}

func (*Result_TokensListResponse) isResult_Response() {}

func (*Result_ChatUploadsResponse) isResult_Response() {}

func (*Result_UploadIconResponse) isResult_Response() {}

func (*Result_UploadResponse) isResult_Response() {}

func (*Result_ProfileResponse) isResult_Response() {}

func (*Result_UpdateProfileResponse) isResult_Response() {}

func (*Result_UsersListResponse) isResult_Response() {}

type WebsocketAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Auth token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *WebsocketAuthRequest) Reset() {
	*x = WebsocketAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketAuthRequest) ProtoMessage() {}

func (x *WebsocketAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketAuthRequest.ProtoReflect.Descriptor instead.
func (*WebsocketAuthRequest) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{5}
}

func (x *WebsocketAuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type WebsocketEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Errors. If there are any errors, connection closes.
	Errors []WebsocketEvent_Error `protobuf:"varint,99,rep,packed,name=errors,proto3,enum=teaproto.WebsocketEvent_Error" json:"errors,omitempty"`
	// New or updated messages
	Messages []*Message `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	// New or updated users
	Users []*User `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	// New or updated chats
	Chats []*Chat `protobuf:"bytes,5,rep,name=chats,proto3" json:"chats,omitempty"`
	// Updated chat badges
	ChatBadges []*ChatBadge `protobuf:"bytes,6,rep,name=chat_badges,json=chatBadges,proto3" json:"chat_badges,omitempty"`
	// Chat events
	ChatEvents []*ChatEvent `protobuf:"bytes,7,rep,name=chat_events,json=chatEvents,proto3" json:"chat_events,omitempty"`
	// Viewed messages
	ViewedMessages []*ViewedMessage `protobuf:"bytes,8,rep,name=viewed_messages,json=viewedMessages,proto3" json:"viewed_messages,omitempty"`
	// Global badges
	GlobalBadges []*GlobalBadge `protobuf:"bytes,9,rep,name=global_badges,json=globalBadges,proto3" json:"global_badges,omitempty"`
	// Changed online statuses
	OnlineStatuses []*OnlineStatus `protobuf:"bytes,10,rep,name=online_statuses,json=onlineStatuses,proto3" json:"online_statuses,omitempty"`
}

func (x *WebsocketEvent) Reset() {
	*x = WebsocketEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketEvent) ProtoMessage() {}

func (x *WebsocketEvent) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketEvent.ProtoReflect.Descriptor instead.
func (*WebsocketEvent) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{6}
}

func (x *WebsocketEvent) GetErrors() []WebsocketEvent_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *WebsocketEvent) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *WebsocketEvent) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *WebsocketEvent) GetChats() []*Chat {
	if x != nil {
		return x.Chats
	}
	return nil
}

func (x *WebsocketEvent) GetChatBadges() []*ChatBadge {
	if x != nil {
		return x.ChatBadges
	}
	return nil
}

func (x *WebsocketEvent) GetChatEvents() []*ChatEvent {
	if x != nil {
		return x.ChatEvents
	}
	return nil
}

func (x *WebsocketEvent) GetViewedMessages() []*ViewedMessage {
	if x != nil {
		return x.ViewedMessages
	}
	return nil
}

func (x *WebsocketEvent) GetGlobalBadges() []*GlobalBadge {
	if x != nil {
		return x.GlobalBadges
	}
	return nil
}

func (x *WebsocketEvent) GetOnlineStatuses() []*OnlineStatus {
	if x != nil {
		return x.OnlineStatuses
	}
	return nil
}

var File_actions_proto protoreflect.FileDescriptor

var file_actions_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2a, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x0e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x41, 0x58,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x22, 0x91, 0x24, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x6d, 0x0a, 0x1f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x1b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x57, 0x0a, 0x17, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x14, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x1b, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5d, 0x0a, 0x19, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x2f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x61, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x12,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x44, 0x0a, 0x10, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65,
	0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x15, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50,
	0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x50, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x66, 0x0a, 0x1c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x1a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x17, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x1b,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x63, 0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x15, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a,
	0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65,
	0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x60, 0x0a, 0x1a, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x80, 0x01, 0x0a, 0x26, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x21, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x1c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x19, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7d, 0x0a, 0x25, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x1b, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a,
	0x19, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x1f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x15, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x50, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x56, 0x0a, 0x16, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x17, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65,
	0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x17,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x11, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x1c, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x19, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0d,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x12, 0x66, 0x61,
	0x6b, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x61, 0x6b, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x66, 0x61, 0x6b, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x61, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x63, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x56, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x04,
	0x08, 0x29, 0x10, 0x2a, 0x4a, 0x04, 0x08, 0x2a, 0x10, 0x2b, 0x22, 0x17, 0x0a, 0x15, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xbe, 0x25, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x59,
	0x0a, 0x17, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x20, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x18, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1c, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x1a, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x73,
	0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x2e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x63, 0x68, 0x61, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x13,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x70, 0x69, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69,
	0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0f, 0x70, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74,
	0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x1d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x63, 0x0a, 0x1b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1c, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x1c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x40, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x1b, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83,
	0x01, 0x0a, 0x27, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x1d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65,
	0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x26, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x21, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1c, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x1a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x42,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x74, 0x61, 0x73, 0x6b, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x70, 0x0a, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74,
	0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x15,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65,
	0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x17, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x18,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x61, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x1d, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65,
	0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x14,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x15, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x14, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x12, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x13, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x04, 0x08, 0x29, 0x10, 0x2a, 0x4a, 0x04,
	0x08, 0x2a, 0x10, 0x2b, 0x22, 0x2c, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xa3, 0x04, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x63, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2d, 0x0a,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x65,
	0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65,
	0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_actions_proto_rawDescOnce sync.Once
	file_actions_proto_rawDescData = file_actions_proto_rawDesc
)

func file_actions_proto_rawDescGZIP() []byte {
	file_actions_proto_rawDescOnce.Do(func() {
		file_actions_proto_rawDescData = protoimpl.X.CompressGZIP(file_actions_proto_rawDescData)
	})
	return file_actions_proto_rawDescData
}

var file_actions_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_actions_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_actions_proto_goTypes = []interface{}{
	(ServerResponse_Error)(0),                  // 0: teaproto.ServerResponse.Error
	(WebsocketEvent_Error)(0),                  // 1: teaproto.WebsocketEvent.Error
	(*ClientRequest)(nil),                      // 2: teaproto.ClientRequest
	(*ServerResponse)(nil),                     // 3: teaproto.ServerResponse
	(*Action)(nil),                             // 4: teaproto.Action
	(*InvalidActionResponse)(nil),              // 5: teaproto.InvalidActionResponse
	(*Result)(nil),                             // 6: teaproto.Result
	(*WebsocketAuthRequest)(nil),               // 7: teaproto.WebsocketAuthRequest
	(*WebsocketEvent)(nil),                     // 8: teaproto.WebsocketEvent
	(*EmailCodeAuthConfirmRequest)(nil),        // 9: teaproto.EmailCodeAuthConfirmRequest
	(*EmailCodeAuthRequest)(nil),               // 10: teaproto.EmailCodeAuthRequest
	(*EmailPasswordAuthRequest)(nil),           // 11: teaproto.EmailPasswordAuthRequest
	(*LogoutRequest)(nil),                      // 12: teaproto.LogoutRequest
	(*SetEmailConfirmRequest)(nil),             // 13: teaproto.SetEmailConfirmRequest
	(*SetEmailRequest)(nil),                    // 14: teaproto.SetEmailRequest
	(*SetPasswordRequest)(nil),                 // 15: teaproto.SetPasswordRequest
	(*ChatDetailsRequest)(nil),                 // 16: teaproto.ChatDetailsRequest
	(*ChatEventRequest)(nil),                   // 17: teaproto.ChatEventRequest
	(*ChatListRequest)(nil),                    // 18: teaproto.ChatListRequest
	(*PinChatRequest)(nil),                     // 19: teaproto.PinChatRequest
	(*CreateGroupRequest)(nil),                 // 20: teaproto.CreateGroupRequest
	(*GroupDetailsRequest)(nil),                // 21: teaproto.GroupDetailsRequest
	(*UpdateGroupRequest)(nil),                 // 22: teaproto.UpdateGroupRequest
	(*DeleteGroupRequest)(nil),                 // 23: teaproto.DeleteGroupRequest
	(*CreateGroupMembersRequest)(nil),          // 24: teaproto.CreateGroupMembersRequest
	(*GroupMembersListRequest)(nil),            // 25: teaproto.GroupMembersListRequest
	(*RemoveGroupMemberRequest)(nil),           // 26: teaproto.RemoveGroupMemberRequest
	(*UpdateGroupMemberRequest)(nil),           // 27: teaproto.UpdateGroupMemberRequest
	(*BoardDetailsRequest)(nil),                // 28: teaproto.BoardDetailsRequest
	(*CreateBoardRequest)(nil),                 // 29: teaproto.CreateBoardRequest
	(*UpdateBoardRequest)(nil),                 // 30: teaproto.UpdateBoardRequest
	(*BoardMembersListRequest)(nil),            // 31: teaproto.BoardMembersListRequest
	(*CreateOrUpdateBoardMembersRequest)(nil),  // 32: teaproto.CreateOrUpdateBoardMembersRequest
	(*RemoveBoardMembersRequest)(nil),          // 33: teaproto.RemoveBoardMembersRequest
	(*CreateTaskRequest)(nil),                  // 34: teaproto.CreateTaskRequest
	(*DeleteTaskRequest)(nil),                  // 35: teaproto.DeleteTaskRequest
	(*UpdateTaskRequest)(nil),                  // 36: teaproto.UpdateTaskRequest
	(*CreateOrUpdateTaskMembersRequest)(nil),   // 37: teaproto.CreateOrUpdateTaskMembersRequest
	(*RemoveTaskMembersRequest)(nil),           // 38: teaproto.RemoveTaskMembersRequest
	(*TaskMembersListRequest)(nil),             // 39: teaproto.TaskMembersListRequest
	(*CreateOrUpdateDeviceRequest)(nil),        // 40: teaproto.CreateOrUpdateDeviceRequest
	(*DeleteDeviceRequest)(nil),                // 41: teaproto.DeleteDeviceRequest
	(*DevicesListRequest)(nil),                 // 42: teaproto.DevicesListRequest
	(*DeleteMessageRequest)(nil),               // 43: teaproto.DeleteMessageRequest
	(*MessageDetailsRequest)(nil),              // 44: teaproto.MessageDetailsRequest
	(*MessagesListRequest)(nil),                // 45: teaproto.MessagesListRequest
	(*SendMessageRequest)(nil),                 // 46: teaproto.SendMessageRequest
	(*MessageViewersRequest)(nil),              // 47: teaproto.MessageViewersRequest
	(*ViewMessageRequest)(nil),                 // 48: teaproto.ViewMessageRequest
	(*ReactionsRequest)(nil),                   // 49: teaproto.ReactionsRequest
	(*SetMessageReactionRequest)(nil),          // 50: teaproto.SetMessageReactionRequest
	(*BadgeRequest)(nil),                       // 51: teaproto.BadgeRequest
	(*StateRequest)(nil),                       // 52: teaproto.StateRequest
	(*FakeErrorRequest)(nil),                   // 53: teaproto.FakeErrorRequest
	(*DeleteTokenRequest)(nil),                 // 54: teaproto.DeleteTokenRequest
	(*TokensListRequest)(nil),                  // 55: teaproto.TokensListRequest
	(*ChatUploadsRequest)(nil),                 // 56: teaproto.ChatUploadsRequest
	(*UploadIconRequest)(nil),                  // 57: teaproto.UploadIconRequest
	(*UploadRequest)(nil),                      // 58: teaproto.UploadRequest
	(*ProfileRequest)(nil),                     // 59: teaproto.ProfileRequest
	(*UpdateProfileRequest)(nil),               // 60: teaproto.UpdateProfileRequest
	(*UsersListRequest)(nil),                   // 61: teaproto.UsersListRequest
	(*EmailCodeAuthConfirmResponse)(nil),       // 62: teaproto.EmailCodeAuthConfirmResponse
	(*EmailCodeAuthResponse)(nil),              // 63: teaproto.EmailCodeAuthResponse
	(*EmailPasswordAuthResponse)(nil),          // 64: teaproto.EmailPasswordAuthResponse
	(*LogoutResponse)(nil),                     // 65: teaproto.LogoutResponse
	(*SetEmailConfirmResponse)(nil),            // 66: teaproto.SetEmailConfirmResponse
	(*SetEmailResponse)(nil),                   // 67: teaproto.SetEmailResponse
	(*SetPasswordResponse)(nil),                // 68: teaproto.SetPasswordResponse
	(*ChatDetailsResponse)(nil),                // 69: teaproto.ChatDetailsResponse
	(*ChatEventResponse)(nil),                  // 70: teaproto.ChatEventResponse
	(*ChatListResponse)(nil),                   // 71: teaproto.ChatListResponse
	(*PinChatResponse)(nil),                    // 72: teaproto.PinChatResponse
	(*CreateGroupResponse)(nil),                // 73: teaproto.CreateGroupResponse
	(*GroupDetailsResponse)(nil),               // 74: teaproto.GroupDetailsResponse
	(*UpdateGroupResponse)(nil),                // 75: teaproto.UpdateGroupResponse
	(*DeleteGroupResponse)(nil),                // 76: teaproto.DeleteGroupResponse
	(*CreateGroupMembersResponse)(nil),         // 77: teaproto.CreateGroupMembersResponse
	(*GroupMembersListResponse)(nil),           // 78: teaproto.GroupMembersListResponse
	(*RemoveGroupMemberResponse)(nil),          // 79: teaproto.RemoveGroupMemberResponse
	(*UpdateGroupMemberResponse)(nil),          // 80: teaproto.UpdateGroupMemberResponse
	(*BoardDetailsResponse)(nil),               // 81: teaproto.BoardDetailsResponse
	(*CreateBoardResponse)(nil),                // 82: teaproto.CreateBoardResponse
	(*UpdateBoardResponse)(nil),                // 83: teaproto.UpdateBoardResponse
	(*BoardMembersListResponse)(nil),           // 84: teaproto.BoardMembersListResponse
	(*CreateOrUpdateBoardMembersResponse)(nil), // 85: teaproto.CreateOrUpdateBoardMembersResponse
	(*RemoveBoardMembersResponse)(nil),         // 86: teaproto.RemoveBoardMembersResponse
	(*CreateTaskResponse)(nil),                 // 87: teaproto.CreateTaskResponse
	(*DeleteTaskResponse)(nil),                 // 88: teaproto.DeleteTaskResponse
	(*UpdateTaskResponse)(nil),                 // 89: teaproto.UpdateTaskResponse
	(*CreateOrUpdateTaskMembersResponse)(nil),  // 90: teaproto.CreateOrUpdateTaskMembersResponse
	(*RemoveTaskMembersResponse)(nil),          // 91: teaproto.RemoveTaskMembersResponse
	(*TaskMembersListResponse)(nil),            // 92: teaproto.TaskMembersListResponse
	(*CreateOrUpdateDeviceResponse)(nil),       // 93: teaproto.CreateOrUpdateDeviceResponse
	(*DeleteDeviceResponse)(nil),               // 94: teaproto.DeleteDeviceResponse
	(*DevicesListResponse)(nil),                // 95: teaproto.DevicesListResponse
	(*DeleteMessageResponse)(nil),              // 96: teaproto.DeleteMessageResponse
	(*MessageDetailsResponse)(nil),             // 97: teaproto.MessageDetailsResponse
	(*MessagesListResponse)(nil),               // 98: teaproto.MessagesListResponse
	(*SendMessageResponse)(nil),                // 99: teaproto.SendMessageResponse
	(*MessageViewersResponse)(nil),             // 100: teaproto.MessageViewersResponse
	(*ViewMessageResponse)(nil),                // 101: teaproto.ViewMessageResponse
	(*ReactionsResponse)(nil),                  // 102: teaproto.ReactionsResponse
	(*SetMessageReactionResponse)(nil),         // 103: teaproto.SetMessageReactionResponse
	(*BadgeResponse)(nil),                      // 104: teaproto.BadgeResponse
	(*StateResponse)(nil),                      // 105: teaproto.StateResponse
	(*DeleteTokenResponse)(nil),                // 106: teaproto.DeleteTokenResponse
	(*TokensListResponse)(nil),                 // 107: teaproto.TokensListResponse
	(*ChatUploadsResponse)(nil),                // 108: teaproto.ChatUploadsResponse
	(*UploadIconResponse)(nil),                 // 109: teaproto.UploadIconResponse
	(*UploadResponse)(nil),                     // 110: teaproto.UploadResponse
	(*ProfileResponse)(nil),                    // 111: teaproto.ProfileResponse
	(*UpdateProfileResponse)(nil),              // 112: teaproto.UpdateProfileResponse
	(*UsersListResponse)(nil),                  // 113: teaproto.UsersListResponse
	(*Message)(nil),                            // 114: teaproto.Message
	(*User)(nil),                               // 115: teaproto.User
	(*Chat)(nil),                               // 116: teaproto.Chat
	(*ChatBadge)(nil),                          // 117: teaproto.ChatBadge
	(*ChatEvent)(nil),                          // 118: teaproto.ChatEvent
	(*ViewedMessage)(nil),                      // 119: teaproto.ViewedMessage
	(*GlobalBadge)(nil),                        // 120: teaproto.GlobalBadge
	(*OnlineStatus)(nil),                       // 121: teaproto.OnlineStatus
}
var file_actions_proto_depIdxs = []int32{
	4,   // 0: teaproto.ClientRequest.actions:type_name -> teaproto.Action
	0,   // 1: teaproto.ServerResponse.errors:type_name -> teaproto.ServerResponse.Error
	6,   // 2: teaproto.ServerResponse.results:type_name -> teaproto.Result
	9,   // 3: teaproto.Action.email_code_auth_confirm_request:type_name -> teaproto.EmailCodeAuthConfirmRequest
	10,  // 4: teaproto.Action.email_code_auth_request:type_name -> teaproto.EmailCodeAuthRequest
	11,  // 5: teaproto.Action.email_password_auth_request:type_name -> teaproto.EmailPasswordAuthRequest
	12,  // 6: teaproto.Action.logout_request:type_name -> teaproto.LogoutRequest
	13,  // 7: teaproto.Action.set_email_confirm_request:type_name -> teaproto.SetEmailConfirmRequest
	14,  // 8: teaproto.Action.set_email_request:type_name -> teaproto.SetEmailRequest
	15,  // 9: teaproto.Action.set_password_request:type_name -> teaproto.SetPasswordRequest
	16,  // 10: teaproto.Action.chat_details_request:type_name -> teaproto.ChatDetailsRequest
	17,  // 11: teaproto.Action.chat_event_request:type_name -> teaproto.ChatEventRequest
	18,  // 12: teaproto.Action.chat_list_request:type_name -> teaproto.ChatListRequest
	19,  // 13: teaproto.Action.pin_chat_request:type_name -> teaproto.PinChatRequest
	20,  // 14: teaproto.Action.create_group_request:type_name -> teaproto.CreateGroupRequest
	21,  // 15: teaproto.Action.group_details_request:type_name -> teaproto.GroupDetailsRequest
	22,  // 16: teaproto.Action.update_group_request:type_name -> teaproto.UpdateGroupRequest
	23,  // 17: teaproto.Action.delete_group_request:type_name -> teaproto.DeleteGroupRequest
	24,  // 18: teaproto.Action.create_group_members_request:type_name -> teaproto.CreateGroupMembersRequest
	25,  // 19: teaproto.Action.group_members_list_request:type_name -> teaproto.GroupMembersListRequest
	26,  // 20: teaproto.Action.remove_group_member_request:type_name -> teaproto.RemoveGroupMemberRequest
	27,  // 21: teaproto.Action.update_group_member_request:type_name -> teaproto.UpdateGroupMemberRequest
	28,  // 22: teaproto.Action.board_details_request:type_name -> teaproto.BoardDetailsRequest
	29,  // 23: teaproto.Action.create_board_request:type_name -> teaproto.CreateBoardRequest
	30,  // 24: teaproto.Action.update_board_request:type_name -> teaproto.UpdateBoardRequest
	31,  // 25: teaproto.Action.board_members_list_request:type_name -> teaproto.BoardMembersListRequest
	32,  // 26: teaproto.Action.create_or_update_board_members_request:type_name -> teaproto.CreateOrUpdateBoardMembersRequest
	33,  // 27: teaproto.Action.remove_board_members_request:type_name -> teaproto.RemoveBoardMembersRequest
	34,  // 28: teaproto.Action.create_task_request:type_name -> teaproto.CreateTaskRequest
	35,  // 29: teaproto.Action.delete_task_request:type_name -> teaproto.DeleteTaskRequest
	36,  // 30: teaproto.Action.update_task_request:type_name -> teaproto.UpdateTaskRequest
	37,  // 31: teaproto.Action.create_or_update_task_members_request:type_name -> teaproto.CreateOrUpdateTaskMembersRequest
	38,  // 32: teaproto.Action.remove_task_members_request:type_name -> teaproto.RemoveTaskMembersRequest
	39,  // 33: teaproto.Action.task_members_list_request:type_name -> teaproto.TaskMembersListRequest
	40,  // 34: teaproto.Action.create_or_update_device_request:type_name -> teaproto.CreateOrUpdateDeviceRequest
	41,  // 35: teaproto.Action.delete_device_request:type_name -> teaproto.DeleteDeviceRequest
	42,  // 36: teaproto.Action.devices_list_request:type_name -> teaproto.DevicesListRequest
	43,  // 37: teaproto.Action.delete_message_request:type_name -> teaproto.DeleteMessageRequest
	44,  // 38: teaproto.Action.message_details_request:type_name -> teaproto.MessageDetailsRequest
	45,  // 39: teaproto.Action.messages_list_request:type_name -> teaproto.MessagesListRequest
	46,  // 40: teaproto.Action.send_message_request:type_name -> teaproto.SendMessageRequest
	47,  // 41: teaproto.Action.message_viewers_request:type_name -> teaproto.MessageViewersRequest
	48,  // 42: teaproto.Action.view_message_request:type_name -> teaproto.ViewMessageRequest
	49,  // 43: teaproto.Action.reactions_request:type_name -> teaproto.ReactionsRequest
	50,  // 44: teaproto.Action.set_message_reaction_request:type_name -> teaproto.SetMessageReactionRequest
	51,  // 45: teaproto.Action.badge_request:type_name -> teaproto.BadgeRequest
	52,  // 46: teaproto.Action.state_request:type_name -> teaproto.StateRequest
	53,  // 47: teaproto.Action.fake_error_request:type_name -> teaproto.FakeErrorRequest
	54,  // 48: teaproto.Action.delete_token_request:type_name -> teaproto.DeleteTokenRequest
	55,  // 49: teaproto.Action.tokens_list_request:type_name -> teaproto.TokensListRequest
	56,  // 50: teaproto.Action.chat_uploads_request:type_name -> teaproto.ChatUploadsRequest
	57,  // 51: teaproto.Action.upload_icon_request:type_name -> teaproto.UploadIconRequest
	58,  // 52: teaproto.Action.upload_request:type_name -> teaproto.UploadRequest
	59,  // 53: teaproto.Action.profile_request:type_name -> teaproto.ProfileRequest
	60,  // 54: teaproto.Action.update_profile_request:type_name -> teaproto.UpdateProfileRequest
	61,  // 55: teaproto.Action.users_list_request:type_name -> teaproto.UsersListRequest
	5,   // 56: teaproto.Result.invalid_action_response:type_name -> teaproto.InvalidActionResponse
	62,  // 57: teaproto.Result.email_code_auth_confirm_response:type_name -> teaproto.EmailCodeAuthConfirmResponse
	63,  // 58: teaproto.Result.email_code_auth_response:type_name -> teaproto.EmailCodeAuthResponse
	64,  // 59: teaproto.Result.email_password_auth_response:type_name -> teaproto.EmailPasswordAuthResponse
	65,  // 60: teaproto.Result.logout_response:type_name -> teaproto.LogoutResponse
	66,  // 61: teaproto.Result.set_email_confirm_response:type_name -> teaproto.SetEmailConfirmResponse
	67,  // 62: teaproto.Result.set_email_response:type_name -> teaproto.SetEmailResponse
	68,  // 63: teaproto.Result.set_password_response:type_name -> teaproto.SetPasswordResponse
	69,  // 64: teaproto.Result.chat_details_response:type_name -> teaproto.ChatDetailsResponse
	70,  // 65: teaproto.Result.chat_event_response:type_name -> teaproto.ChatEventResponse
	71,  // 66: teaproto.Result.chat_list_response:type_name -> teaproto.ChatListResponse
	72,  // 67: teaproto.Result.pin_chat_response:type_name -> teaproto.PinChatResponse
	73,  // 68: teaproto.Result.create_group_response:type_name -> teaproto.CreateGroupResponse
	74,  // 69: teaproto.Result.group_details_response:type_name -> teaproto.GroupDetailsResponse
	75,  // 70: teaproto.Result.update_group_response:type_name -> teaproto.UpdateGroupResponse
	76,  // 71: teaproto.Result.delete_group_response:type_name -> teaproto.DeleteGroupResponse
	77,  // 72: teaproto.Result.create_group_members_response:type_name -> teaproto.CreateGroupMembersResponse
	78,  // 73: teaproto.Result.group_members_list_response:type_name -> teaproto.GroupMembersListResponse
	79,  // 74: teaproto.Result.remove_group_member_response:type_name -> teaproto.RemoveGroupMemberResponse
	80,  // 75: teaproto.Result.update_group_member_response:type_name -> teaproto.UpdateGroupMemberResponse
	81,  // 76: teaproto.Result.board_details_response:type_name -> teaproto.BoardDetailsResponse
	82,  // 77: teaproto.Result.create_board_response:type_name -> teaproto.CreateBoardResponse
	83,  // 78: teaproto.Result.update_board_response:type_name -> teaproto.UpdateBoardResponse
	84,  // 79: teaproto.Result.board_members_list_response:type_name -> teaproto.BoardMembersListResponse
	85,  // 80: teaproto.Result.create_or_update_board_members_response:type_name -> teaproto.CreateOrUpdateBoardMembersResponse
	86,  // 81: teaproto.Result.remove_board_members_response:type_name -> teaproto.RemoveBoardMembersResponse
	87,  // 82: teaproto.Result.create_task_response:type_name -> teaproto.CreateTaskResponse
	88,  // 83: teaproto.Result.delete_task_response:type_name -> teaproto.DeleteTaskResponse
	89,  // 84: teaproto.Result.update_task_response:type_name -> teaproto.UpdateTaskResponse
	90,  // 85: teaproto.Result.create_or_update_task_members_response:type_name -> teaproto.CreateOrUpdateTaskMembersResponse
	91,  // 86: teaproto.Result.remove_task_members_response:type_name -> teaproto.RemoveTaskMembersResponse
	92,  // 87: teaproto.Result.task_members_list_response:type_name -> teaproto.TaskMembersListResponse
	93,  // 88: teaproto.Result.create_or_update_device_response:type_name -> teaproto.CreateOrUpdateDeviceResponse
	94,  // 89: teaproto.Result.delete_device_response:type_name -> teaproto.DeleteDeviceResponse
	95,  // 90: teaproto.Result.devices_list_response:type_name -> teaproto.DevicesListResponse
	96,  // 91: teaproto.Result.delete_message_response:type_name -> teaproto.DeleteMessageResponse
	97,  // 92: teaproto.Result.message_details_response:type_name -> teaproto.MessageDetailsResponse
	98,  // 93: teaproto.Result.messages_list_response:type_name -> teaproto.MessagesListResponse
	99,  // 94: teaproto.Result.send_message_response:type_name -> teaproto.SendMessageResponse
	100, // 95: teaproto.Result.message_viewers_response:type_name -> teaproto.MessageViewersResponse
	101, // 96: teaproto.Result.view_message_response:type_name -> teaproto.ViewMessageResponse
	102, // 97: teaproto.Result.reactions_response:type_name -> teaproto.ReactionsResponse
	103, // 98: teaproto.Result.set_message_reaction_response:type_name -> teaproto.SetMessageReactionResponse
	104, // 99: teaproto.Result.badge_response:type_name -> teaproto.BadgeResponse
	105, // 100: teaproto.Result.state_response:type_name -> teaproto.StateResponse
	106, // 101: teaproto.Result.delete_token_response:type_name -> teaproto.DeleteTokenResponse
	107, // 102: teaproto.Result.tokens_list_response:type_name -> teaproto.TokensListResponse
	108, // 103: teaproto.Result.chat_uploads_response:type_name -> teaproto.ChatUploadsResponse
	109, // 104: teaproto.Result.upload_icon_response:type_name -> teaproto.UploadIconResponse
	110, // 105: teaproto.Result.upload_response:type_name -> teaproto.UploadResponse
	111, // 106: teaproto.Result.profile_response:type_name -> teaproto.ProfileResponse
	112, // 107: teaproto.Result.update_profile_response:type_name -> teaproto.UpdateProfileResponse
	113, // 108: teaproto.Result.users_list_response:type_name -> teaproto.UsersListResponse
	1,   // 109: teaproto.WebsocketEvent.errors:type_name -> teaproto.WebsocketEvent.Error
	114, // 110: teaproto.WebsocketEvent.messages:type_name -> teaproto.Message
	115, // 111: teaproto.WebsocketEvent.users:type_name -> teaproto.User
	116, // 112: teaproto.WebsocketEvent.chats:type_name -> teaproto.Chat
	117, // 113: teaproto.WebsocketEvent.chat_badges:type_name -> teaproto.ChatBadge
	118, // 114: teaproto.WebsocketEvent.chat_events:type_name -> teaproto.ChatEvent
	119, // 115: teaproto.WebsocketEvent.viewed_messages:type_name -> teaproto.ViewedMessage
	120, // 116: teaproto.WebsocketEvent.global_badges:type_name -> teaproto.GlobalBadge
	121, // 117: teaproto.WebsocketEvent.online_statuses:type_name -> teaproto.OnlineStatus
	118, // [118:118] is the sub-list for method output_type
	118, // [118:118] is the sub-list for method input_type
	118, // [118:118] is the sub-list for extension type_name
	118, // [118:118] is the sub-list for extension extendee
	0,   // [0:118] is the sub-list for field type_name
}

func init() { file_actions_proto_init() }
func file_actions_proto_init() {
	if File_actions_proto != nil {
		return
	}
	file_auth_proto_init()
	file_badges_proto_init()
	file_board_members_proto_init()
	file_boards_proto_init()
	file_chats_proto_init()
	file_types_badges_proto_init()
	file_types_chats_proto_init()
	file_types_users_proto_init()
	file_devices_proto_init()
	file_group_members_proto_init()
	file_groups_proto_init()
	file_messages_proto_init()
	file_reactions_proto_init()
	file_state_proto_init()
	file_task_members_proto_init()
	file_tasks_proto_init()
	file_tokens_proto_init()
	file_uploads_proto_init()
	file_users_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_actions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_actions_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Action_EmailCodeAuthConfirmRequest)(nil),
		(*Action_EmailCodeAuthRequest)(nil),
		(*Action_EmailPasswordAuthRequest)(nil),
		(*Action_LogoutRequest)(nil),
		(*Action_SetEmailConfirmRequest)(nil),
		(*Action_SetEmailRequest)(nil),
		(*Action_SetPasswordRequest)(nil),
		(*Action_ChatDetailsRequest)(nil),
		(*Action_ChatEventRequest)(nil),
		(*Action_ChatListRequest)(nil),
		(*Action_PinChatRequest)(nil),
		(*Action_CreateGroupRequest)(nil),
		(*Action_GroupDetailsRequest)(nil),
		(*Action_UpdateGroupRequest)(nil),
		(*Action_DeleteGroupRequest)(nil),
		(*Action_CreateGroupMembersRequest)(nil),
		(*Action_GroupMembersListRequest)(nil),
		(*Action_RemoveGroupMemberRequest)(nil),
		(*Action_UpdateGroupMemberRequest)(nil),
		(*Action_BoardDetailsRequest)(nil),
		(*Action_CreateBoardRequest)(nil),
		(*Action_UpdateBoardRequest)(nil),
		(*Action_BoardMembersListRequest)(nil),
		(*Action_CreateOrUpdateBoardMembersRequest)(nil),
		(*Action_RemoveBoardMembersRequest)(nil),
		(*Action_CreateTaskRequest)(nil),
		(*Action_DeleteTaskRequest)(nil),
		(*Action_UpdateTaskRequest)(nil),
		(*Action_CreateOrUpdateTaskMembersRequest)(nil),
		(*Action_RemoveTaskMembersRequest)(nil),
		(*Action_TaskMembersListRequest)(nil),
		(*Action_CreateOrUpdateDeviceRequest)(nil),
		(*Action_DeleteDeviceRequest)(nil),
		(*Action_DevicesListRequest)(nil),
		(*Action_DeleteMessageRequest)(nil),
		(*Action_MessageDetailsRequest)(nil),
		(*Action_MessagesListRequest)(nil),
		(*Action_SendMessageRequest)(nil),
		(*Action_MessageViewersRequest)(nil),
		(*Action_ViewMessageRequest)(nil),
		(*Action_ReactionsRequest)(nil),
		(*Action_SetMessageReactionRequest)(nil),
		(*Action_BadgeRequest)(nil),
		(*Action_StateRequest)(nil),
		(*Action_FakeErrorRequest)(nil),
		(*Action_DeleteTokenRequest)(nil),
		(*Action_TokensListRequest)(nil),
		(*Action_ChatUploadsRequest)(nil),
		(*Action_UploadIconRequest)(nil),
		(*Action_UploadRequest)(nil),
		(*Action_ProfileRequest)(nil),
		(*Action_UpdateProfileRequest)(nil),
		(*Action_UsersListRequest)(nil),
	}
	file_actions_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Result_InvalidActionResponse)(nil),
		(*Result_EmailCodeAuthConfirmResponse)(nil),
		(*Result_EmailCodeAuthResponse)(nil),
		(*Result_EmailPasswordAuthResponse)(nil),
		(*Result_LogoutResponse)(nil),
		(*Result_SetEmailConfirmResponse)(nil),
		(*Result_SetEmailResponse)(nil),
		(*Result_SetPasswordResponse)(nil),
		(*Result_ChatDetailsResponse)(nil),
		(*Result_ChatEventResponse)(nil),
		(*Result_ChatListResponse)(nil),
		(*Result_PinChatResponse)(nil),
		(*Result_CreateGroupResponse)(nil),
		(*Result_GroupDetailsResponse)(nil),
		(*Result_UpdateGroupResponse)(nil),
		(*Result_DeleteGroupResponse)(nil),
		(*Result_CreateGroupMembersResponse)(nil),
		(*Result_GroupMembersListResponse)(nil),
		(*Result_RemoveGroupMemberResponse)(nil),
		(*Result_UpdateGroupMemberResponse)(nil),
		(*Result_BoardDetailsResponse)(nil),
		(*Result_CreateBoardResponse)(nil),
		(*Result_UpdateBoardResponse)(nil),
		(*Result_BoardMembersListResponse)(nil),
		(*Result_CreateOrUpdateBoardMembersResponse)(nil),
		(*Result_RemoveBoardMembersResponse)(nil),
		(*Result_CreateTaskResponse)(nil),
		(*Result_DeleteTaskResponse)(nil),
		(*Result_UpdateTaskResponse)(nil),
		(*Result_CreateOrUpdateTaskMembersResponse)(nil),
		(*Result_RemoveTaskMembersResponse)(nil),
		(*Result_TaskMembersListResponse)(nil),
		(*Result_CreateOrUpdateDeviceResponse)(nil),
		(*Result_DeleteDeviceResponse)(nil),
		(*Result_DevicesListResponse)(nil),
		(*Result_DeleteMessageResponse)(nil),
		(*Result_MessageDetailsResponse)(nil),
		(*Result_MessagesListResponse)(nil),
		(*Result_SendMessageResponse)(nil),
		(*Result_MessageViewersResponse)(nil),
		(*Result_ViewMessageResponse)(nil),
		(*Result_ReactionsResponse)(nil),
		(*Result_SetMessageReactionResponse)(nil),
		(*Result_BadgeResponse)(nil),
		(*Result_StateResponse)(nil),
		(*Result_DeleteTokenResponse)(nil),
		(*Result_TokensListResponse)(nil),
		(*Result_ChatUploadsResponse)(nil),
		(*Result_UploadIconResponse)(nil),
		(*Result_UploadResponse)(nil),
		(*Result_ProfileResponse)(nil),
		(*Result_UpdateProfileResponse)(nil),
		(*Result_UsersListResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actions_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_actions_proto_goTypes,
		DependencyIndexes: file_actions_proto_depIdxs,
		EnumInfos:         file_actions_proto_enumTypes,
		MessageInfos:      file_actions_proto_msgTypes,
	}.Build()
	File_actions_proto = out.File
	file_actions_proto_rawDesc = nil
	file_actions_proto_goTypes = nil
	file_actions_proto_depIdxs = nil
}
