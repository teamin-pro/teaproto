// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.25.2
// source: teatypes/tbadges.proto

package teaproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BadgeType int32

const (
	// Badge on application icon
	BadgeType_BADGE_TYPE_MAIN BadgeType = 0
)

// Enum value maps for BadgeType.
var (
	BadgeType_name = map[int32]string{
		0: "BADGE_TYPE_MAIN",
	}
	BadgeType_value = map[string]int32{
		"BADGE_TYPE_MAIN": 0,
	}
)

func (x BadgeType) Enum() *BadgeType {
	p := new(BadgeType)
	*p = x
	return p
}

func (x BadgeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BadgeType) Descriptor() protoreflect.EnumDescriptor {
	return file_teatypes_tbadges_proto_enumTypes[0].Descriptor()
}

func (BadgeType) Type() protoreflect.EnumType {
	return &file_teatypes_tbadges_proto_enumTypes[0]
}

func (x BadgeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BadgeType.Descriptor instead.
func (BadgeType) EnumDescriptor() ([]byte, []int) {
	return file_teatypes_tbadges_proto_rawDescGZIP(), []int{0}
}

type GlobalBadge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Badge type
	Type BadgeType `protobuf:"varint,1,opt,name=type,proto3,enum=teatypes.BadgeType" json:"type,omitempty"`
	// Badge counter
	Counter uint32 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	// Badge updated time. In conflicting cases, the badge with the latest updated_at should be used
	UpdatedAt uint64 `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GlobalBadge) Reset() {
	*x = GlobalBadge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teatypes_tbadges_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalBadge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalBadge) ProtoMessage() {}

func (x *GlobalBadge) ProtoReflect() protoreflect.Message {
	mi := &file_teatypes_tbadges_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalBadge.ProtoReflect.Descriptor instead.
func (*GlobalBadge) Descriptor() ([]byte, []int) {
	return file_teatypes_tbadges_proto_rawDescGZIP(), []int{0}
}

func (x *GlobalBadge) GetType() BadgeType {
	if x != nil {
		return x.Type
	}
	return BadgeType_BADGE_TYPE_MAIN
}

func (x *GlobalBadge) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *GlobalBadge) GetUpdatedAt() uint64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_teatypes_tbadges_proto protoreflect.FileDescriptor

var file_teatypes_tbadges_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x65, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x65, 0x61, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x22, 0x6f, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x74, 0x65, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x2a, 0x20, 0x0a, 0x09, 0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x44, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x41, 0x49, 0x4e, 0x10, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teatypes_tbadges_proto_rawDescOnce sync.Once
	file_teatypes_tbadges_proto_rawDescData = file_teatypes_tbadges_proto_rawDesc
)

func file_teatypes_tbadges_proto_rawDescGZIP() []byte {
	file_teatypes_tbadges_proto_rawDescOnce.Do(func() {
		file_teatypes_tbadges_proto_rawDescData = protoimpl.X.CompressGZIP(file_teatypes_tbadges_proto_rawDescData)
	})
	return file_teatypes_tbadges_proto_rawDescData
}

var file_teatypes_tbadges_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_teatypes_tbadges_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_teatypes_tbadges_proto_goTypes = []interface{}{
	(BadgeType)(0),      // 0: teatypes.BadgeType
	(*GlobalBadge)(nil), // 1: teatypes.GlobalBadge
}
var file_teatypes_tbadges_proto_depIdxs = []int32{
	0, // 0: teatypes.GlobalBadge.type:type_name -> teatypes.BadgeType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_teatypes_tbadges_proto_init() }
func file_teatypes_tbadges_proto_init() {
	if File_teatypes_tbadges_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teatypes_tbadges_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalBadge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teatypes_tbadges_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teatypes_tbadges_proto_goTypes,
		DependencyIndexes: file_teatypes_tbadges_proto_depIdxs,
		EnumInfos:         file_teatypes_tbadges_proto_enumTypes,
		MessageInfos:      file_teatypes_tbadges_proto_msgTypes,
	}.Build()
	File_teatypes_tbadges_proto = out.File
	file_teatypes_tbadges_proto_rawDesc = nil
	file_teatypes_tbadges_proto_goTypes = nil
	file_teatypes_tbadges_proto_depIdxs = nil
}
