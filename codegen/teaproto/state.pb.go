// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.24.3
// source: state.proto

package teaproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FakeErrorRequest_Mode int32

const (
	FakeErrorRequest_RETURN_SERVER_ERROR  FakeErrorRequest_Mode = 0
	FakeErrorRequest_RETURN_INVALID_TOKEN FakeErrorRequest_Mode = 1
)

// Enum value maps for FakeErrorRequest_Mode.
var (
	FakeErrorRequest_Mode_name = map[int32]string{
		0: "RETURN_SERVER_ERROR",
		1: "RETURN_INVALID_TOKEN",
	}
	FakeErrorRequest_Mode_value = map[string]int32{
		"RETURN_SERVER_ERROR":  0,
		"RETURN_INVALID_TOKEN": 1,
	}
)

func (x FakeErrorRequest_Mode) Enum() *FakeErrorRequest_Mode {
	p := new(FakeErrorRequest_Mode)
	*p = x
	return p
}

func (x FakeErrorRequest_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FakeErrorRequest_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_state_proto_enumTypes[0].Descriptor()
}

func (FakeErrorRequest_Mode) Type() protoreflect.EnumType {
	return &file_state_proto_enumTypes[0]
}

func (x FakeErrorRequest_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FakeErrorRequest_Mode.Descriptor instead.
func (FakeErrorRequest_Mode) EnumDescriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{0, 0}
}

type FakeErrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode FakeErrorRequest_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=teaproto.FakeErrorRequest_Mode" json:"mode,omitempty"`
}

func (x *FakeErrorRequest) Reset() {
	*x = FakeErrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FakeErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FakeErrorRequest) ProtoMessage() {}

func (x *FakeErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FakeErrorRequest.ProtoReflect.Descriptor instead.
func (*FakeErrorRequest) Descriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{0}
}

func (x *FakeErrorRequest) GetMode() FakeErrorRequest_Mode {
	if x != nil {
		return x.Mode
	}
	return FakeErrorRequest_RETURN_SERVER_ERROR
}

type StateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateRequest) Reset() {
	*x = StateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRequest) ProtoMessage() {}

func (x *StateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRequest.ProtoReflect.Descriptor instead.
func (*StateRequest) Descriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{1}
}

type StateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// server info
	Now            uint64 `protobuf:"varint,1,opt,name=now,proto3" json:"now,omitempty"` // current server time in unix format, UTC
	GtprotoVersion string `protobuf:"bytes,13,opt,name=gtproto_version,json=gtprotoVersion,proto3" json:"gtproto_version,omitempty"`
	// common
	MaxResultsOnPage    uint32 `protobuf:"varint,2,opt,name=max_results_on_page,json=maxResultsOnPage,proto3" json:"max_results_on_page,omitempty"`
	MaxActionsInRequest uint32 `protobuf:"varint,14,opt,name=max_actions_in_request,json=maxActionsInRequest,proto3" json:"max_actions_in_request,omitempty"`
	MaxFileSize         uint32 `protobuf:"varint,6,opt,name=max_file_size,json=maxFileSize,proto3" json:"max_file_size,omitempty"` // 0 = uploads disabled, otherwise file size in bytes
	MinIconSize         uint32 `protobuf:"varint,8,opt,name=min_icon_size,json=minIconSize,proto3" json:"min_icon_size,omitempty"` // min icon width / height in pixels
	// users
	AuthMethods       []AuthMethod `protobuf:"varint,10,rep,packed,name=auth_methods,json=authMethods,proto3,enum=teaproto.AuthMethod" json:"auth_methods,omitempty"` // supported auth methods
	MaxUsernameLength uint32       `protobuf:"varint,4,opt,name=max_username_length,json=maxUsernameLength,proto3" json:"max_username_length,omitempty"`
	MinPasswordLength uint32       `protobuf:"varint,11,opt,name=min_password_length,json=minPasswordLength,proto3" json:"min_password_length,omitempty"`
	MaxPasswordLength uint32       `protobuf:"varint,12,opt,name=max_password_length,json=maxPasswordLength,proto3" json:"max_password_length,omitempty"`
	// messages
	MaxMessageLength        uint32 `protobuf:"varint,5,opt,name=max_message_length,json=maxMessageLength,proto3" json:"max_message_length,omitempty"`
	MaxAudioLengthInSeconds uint32 `protobuf:"varint,15,opt,name=max_audio_length_in_seconds,json=maxAudioLengthInSeconds,proto3" json:"max_audio_length_in_seconds,omitempty"`
	MaxUploadsForMessage    uint32 `protobuf:"varint,7,opt,name=max_uploads_for_message,json=maxUploadsForMessage,proto3" json:"max_uploads_for_message,omitempty"`
	// groups
	MaxGroupTitleLength uint32 `protobuf:"varint,3,opt,name=max_group_title_length,json=maxGroupTitleLength,proto3" json:"max_group_title_length,omitempty"`
	// task
	MaxTaskTitleLength       uint32 `protobuf:"varint,19,opt,name=max_task_title_length,json=maxTaskTitleLength,proto3" json:"max_task_title_length,omitempty"`
	MaxTaskDescriptionLength uint32 `protobuf:"varint,16,opt,name=max_task_description_length,json=maxTaskDescriptionLength,proto3" json:"max_task_description_length,omitempty"`
	MaxBoardTitleLength      uint32 `protobuf:"varint,17,opt,name=max_board_title_length,json=maxBoardTitleLength,proto3" json:"max_board_title_length,omitempty"`
	// notifications
	PushNotificationsEnabled bool `protobuf:"varint,9,opt,name=push_notifications_enabled,json=pushNotificationsEnabled,proto3" json:"push_notifications_enabled,omitempty"` // push notifications are configured and enabled on server
}

func (x *StateResponse) Reset() {
	*x = StateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateResponse) ProtoMessage() {}

func (x *StateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateResponse.ProtoReflect.Descriptor instead.
func (*StateResponse) Descriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{2}
}

func (x *StateResponse) GetNow() uint64 {
	if x != nil {
		return x.Now
	}
	return 0
}

func (x *StateResponse) GetGtprotoVersion() string {
	if x != nil {
		return x.GtprotoVersion
	}
	return ""
}

func (x *StateResponse) GetMaxResultsOnPage() uint32 {
	if x != nil {
		return x.MaxResultsOnPage
	}
	return 0
}

func (x *StateResponse) GetMaxActionsInRequest() uint32 {
	if x != nil {
		return x.MaxActionsInRequest
	}
	return 0
}

func (x *StateResponse) GetMaxFileSize() uint32 {
	if x != nil {
		return x.MaxFileSize
	}
	return 0
}

func (x *StateResponse) GetMinIconSize() uint32 {
	if x != nil {
		return x.MinIconSize
	}
	return 0
}

func (x *StateResponse) GetAuthMethods() []AuthMethod {
	if x != nil {
		return x.AuthMethods
	}
	return nil
}

func (x *StateResponse) GetMaxUsernameLength() uint32 {
	if x != nil {
		return x.MaxUsernameLength
	}
	return 0
}

func (x *StateResponse) GetMinPasswordLength() uint32 {
	if x != nil {
		return x.MinPasswordLength
	}
	return 0
}

func (x *StateResponse) GetMaxPasswordLength() uint32 {
	if x != nil {
		return x.MaxPasswordLength
	}
	return 0
}

func (x *StateResponse) GetMaxMessageLength() uint32 {
	if x != nil {
		return x.MaxMessageLength
	}
	return 0
}

func (x *StateResponse) GetMaxAudioLengthInSeconds() uint32 {
	if x != nil {
		return x.MaxAudioLengthInSeconds
	}
	return 0
}

func (x *StateResponse) GetMaxUploadsForMessage() uint32 {
	if x != nil {
		return x.MaxUploadsForMessage
	}
	return 0
}

func (x *StateResponse) GetMaxGroupTitleLength() uint32 {
	if x != nil {
		return x.MaxGroupTitleLength
	}
	return 0
}

func (x *StateResponse) GetMaxTaskTitleLength() uint32 {
	if x != nil {
		return x.MaxTaskTitleLength
	}
	return 0
}

func (x *StateResponse) GetMaxTaskDescriptionLength() uint32 {
	if x != nil {
		return x.MaxTaskDescriptionLength
	}
	return 0
}

func (x *StateResponse) GetMaxBoardTitleLength() uint32 {
	if x != nil {
		return x.MaxBoardTitleLength
	}
	return 0
}

func (x *StateResponse) GetPushNotificationsEnabled() bool {
	if x != nil {
		return x.PushNotificationsEnabled
	}
	return false
}

var File_state_proto protoreflect.FileDescriptor

var file_state_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74,
	0x65, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x46, 0x61, 0x6b, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x61, 0x6b, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x39, 0x0a,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x18,
	0x0a, 0x14, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfc, 0x06, 0x0a, 0x0d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x6f, 0x77, 0x12, 0x27, 0x0a, 0x0f,
	0x67, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x4f, 0x6e,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6d, 0x61, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x37, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0b, 0x61,
	0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61,
	0x78, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69,
	0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61,
	0x78, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x1b, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6d,
	0x61, 0x78, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x49, 0x6e, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a,
	0x16, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d,
	0x61, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3d, 0x0a, 0x1b, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6d, 0x61, 0x78, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x1a, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x70,
	0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_state_proto_rawDescOnce sync.Once
	file_state_proto_rawDescData = file_state_proto_rawDesc
)

func file_state_proto_rawDescGZIP() []byte {
	file_state_proto_rawDescOnce.Do(func() {
		file_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_state_proto_rawDescData)
	})
	return file_state_proto_rawDescData
}

var file_state_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_state_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_state_proto_goTypes = []interface{}{
	(FakeErrorRequest_Mode)(0), // 0: teaproto.FakeErrorRequest.Mode
	(*FakeErrorRequest)(nil),   // 1: teaproto.FakeErrorRequest
	(*StateRequest)(nil),       // 2: teaproto.StateRequest
	(*StateResponse)(nil),      // 3: teaproto.StateResponse
	(AuthMethod)(0),            // 4: teaproto.AuthMethod
}
var file_state_proto_depIdxs = []int32{
	0, // 0: teaproto.FakeErrorRequest.mode:type_name -> teaproto.FakeErrorRequest.Mode
	4, // 1: teaproto.StateResponse.auth_methods:type_name -> teaproto.AuthMethod
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_state_proto_init() }
func file_state_proto_init() {
	if File_state_proto != nil {
		return
	}
	file_auth_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FakeErrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_state_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_state_proto_goTypes,
		DependencyIndexes: file_state_proto_depIdxs,
		EnumInfos:         file_state_proto_enumTypes,
		MessageInfos:      file_state_proto_msgTypes,
	}.Build()
	File_state_proto = out.File
	file_state_proto_rawDesc = nil
	file_state_proto_goTypes = nil
	file_state_proto_depIdxs = nil
}
